{"version":3,"file":"index-browser.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\nimport formatterANSI from 'nightingale-ansi-formatter';\nimport type {\n  Level,\n  Handle,\n  IsHandling,\n  LogRecord,\n  Metadata,\n  Handler,\n} from 'nightingale-types';\nimport { Platform } from 'react-native';\nimport parseErrorStack from 'react-native/Libraries/Core/Devtools/parseErrorStack';\nimport symbolicateStackTrace from 'react-native/Libraries/Core/Devtools/symbolicateStackTrace';\n\nconst getStackTrace = (e: Error): any => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (Platform.hasOwnProperty('constants')) {\n    // RN version >= 0.63\n    if (Platform.constants.reactNativeVersion.minor >= 64) {\n      // RN version >= 0.64 -> Stacktrace as string\n      return parseErrorStack(e.stack as unknown as any);\n    }\n    // RN version == 0.63 -> Stacktrace as string\n    else return parseErrorStack(e);\n  }\n  // RN version < 0.63 -> Stacktrace as string\n  else return parseErrorStack(e);\n};\n\nfunction parsedStackToString(stack: any[]): string {\n  return stack\n    .map(\n      (frame) =>\n        `  at ${frame.file}${\n          frame.lineNumber\n            ? `:${frame.lineNumber}${frame.column ? `:${frame.column}` : ''}`\n            : ''\n        }${frame.methodName ? ` in ${frame.methodName}` : ''}`,\n    )\n    .join('\\n');\n}\n\nfunction consoleOutput<T extends Metadata>(\n  param: string | string[],\n  record: LogRecord<T>,\n): void {\n  // eslint-disable-next-line no-console\n  console.log(...param);\n}\n\nconst createHandle = (): Handle => {\n  return <T extends Metadata>(record: LogRecord<T>): void => {\n    const error = record.metadata?.error;\n    if (error && error instanceof Error) {\n      delete record.metadata?.error;\n      symbolicateStackTrace(getStackTrace(error))\n        .then(({ stack, codeFrame }: any) => {\n          error.stack = parsedStackToString(stack);\n          consoleOutput([formatterANSI(record)], record);\n        })\n        .catch((err) => {\n          consoleOutput([formatterANSI(record)], record);\n        });\n    } else {\n      consoleOutput([formatterANSI(record)], record);\n    }\n  };\n};\n\nexport class ReactNativeConsoleHandler implements Handler {\n  minLevel: Level = 0;\n\n  handle: Handle;\n\n  isHandling: IsHandling;\n\n  constructor(minLevel: Level) {\n    this.minLevel = minLevel;\n    this.isHandling = (level: Level) => level >= minLevel;\n    this.handle = createHandle();\n  }\n}\n"],"names":["getStackTrace","e","Platform","hasOwnProperty","constants","reactNativeVersion","minor","parseErrorStack","stack","parsedStackToString","map","frame","file","lineNumber","column","methodName","join","consoleOutput","param","console","log","createHandle","record","error","metadata","Error","symbolicateStackTrace","then","codeFrame","formatterANSI","ReactNativeConsoleHandler","minLevel","isHandling","level","handle"],"mappings":"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"}