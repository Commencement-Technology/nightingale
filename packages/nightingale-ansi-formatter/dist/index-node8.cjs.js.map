{"version":3,"file":"index-node8.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import ansi from 'ansi-styles';\nimport { Styles, Record } from 'nightingale-types';\nimport { styleToHexColor, formatRecordToString } from 'nightingale-formatter';\n\ninterface CodePair {\n  open: string;\n  close: string;\n}\n\ninterface AnsiStyles {\n  [key: string]: CodePair | undefined;\n}\n\nconst ansiStyles: AnsiStyles = {\n  black: ansi.black,\n  red: ansi.red,\n  green: ansi.green,\n  yellow: ansi.yellow,\n  blue: ansi.blue,\n  magenta: ansi.magenta,\n  cyan: ansi.cyan,\n  white: ansi.white,\n  gray: ansi.gray,\n\n  bgBlack: ansi.bgBlack,\n  bgRed: ansi.bgRed,\n  bgGreen: ansi.bgGreen,\n  bgYellow: ansi.bgYellow,\n  bgBlue: ansi.bgBlue,\n  bgMagenta: ansi.bgMagenta,\n  bgCyan: ansi.bgCyan,\n  bgWhite: ansi.bgWhite,\n\n  bold: ansi.bold,\n  underline: ansi.underline,\n\n  // http://www.calmar.ws/vim/256-xterm-24bit-rgb-color-chart.html\n  orange: {\n    open: ansi.color.ansi256.hex(styleToHexColor.orange),\n    close: ansi.color.close,\n  },\n  'gray-light': {\n    open: ansi.color.ansi256.hex(styleToHexColor['gray-light']),\n    close: ansi.color.close,\n  },\n};\n\nexport function style(styles: Styles, string: string) {\n  if (!styles || styles.length === 0 || !string) {\n    return string;\n  }\n\n  return styles.reduce((string: string, styleName: string) => {\n    const style: CodePair | undefined = ansiStyles[styleName];\n\n    if (!style) {\n      throw new Error(`Unknown style: ${styleName}`);\n    }\n\n    return style.open + string + style.close;\n  }, string);\n}\n\n/**\n * @param {Object} record\n * @returns {string}\n */\nexport default function format<T>(record: Record<T>) {\n  return formatRecordToString(record, style);\n}\n"],"names":["ansiStyles","black","ansi","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bold","underline","orange","open","color","ansi256","hex","styleToHexColor","close","style","styles","string","length","reduce","styleName","Error","format","record","formatRecordToString"],"mappings":";;;;;;;;;AAaA,MAAMA,UAAsB,GAAG;EAC7BC,KAAK,EAAEC,IAAI,CAACD,KADiB;EAE7BE,GAAG,EAAED,IAAI,CAACC,GAFmB;EAG7BC,KAAK,EAAEF,IAAI,CAACE,KAHiB;EAI7BC,MAAM,EAAEH,IAAI,CAACG,MAJgB;EAK7BC,IAAI,EAAEJ,IAAI,CAACI,IALkB;EAM7BC,OAAO,EAAEL,IAAI,CAACK,OANe;EAO7BC,IAAI,EAAEN,IAAI,CAACM,IAPkB;EAQ7BC,KAAK,EAAEP,IAAI,CAACO,KARiB;EAS7BC,IAAI,EAAER,IAAI,CAACQ,IATkB;EAW7BC,OAAO,EAAET,IAAI,CAACS,OAXe;EAY7BC,KAAK,EAAEV,IAAI,CAACU,KAZiB;EAa7BC,OAAO,EAAEX,IAAI,CAACW,OAbe;EAc7BC,QAAQ,EAAEZ,IAAI,CAACY,QAdc;EAe7BC,MAAM,EAAEb,IAAI,CAACa,MAfgB;EAgB7BC,SAAS,EAAEd,IAAI,CAACc,SAhBa;EAiB7BC,MAAM,EAAEf,IAAI,CAACe,MAjBgB;EAkB7BC,OAAO,EAAEhB,IAAI,CAACgB,OAlBe;EAoB7BC,IAAI,EAAEjB,IAAI,CAACiB,IApBkB;EAqB7BC,SAAS,EAAElB,IAAI,CAACkB,SArBa;;EAwB7BC,MAAM,EAAE;IACNC,IAAI,EAAEpB,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuBC,oCAAe,CAACL,MAAvC,CADA;IAENM,KAAK,EAAEzB,IAAI,CAACqB,KAAL,CAAWI;GA1BS;gBA4Bf;IACZL,IAAI,EAAEpB,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuBC,oCAAe,CAAC,YAAD,CAAtC,CADM;IAEZC,KAAK,EAAEzB,IAAI,CAACqB,KAAL,CAAWI;;CA9BtB;AAkCA,AAAO,SAASC,KAAT,CAAeC,MAAf,EAA+BC,MAA/B,EAA+C;MAChD,CAACD,MAAD,IAAWA,MAAM,CAACE,MAAP,KAAkB,CAA7B,IAAkC,CAACD,MAAvC,EAA+C;WACtCA,MAAP;;;SAGKD,MAAM,CAACG,MAAP,CAAc,CAACF,MAAD,EAAiBG,SAAjB,KAAuC;UACpDL,KAA2B,GAAG5B,UAAU,CAACiC,SAAD,CAA9C;;QAEI,CAACL,KAAL,EAAY;YACJ,IAAIM,KAAJ,CAAW,kBAAiBD,SAAU,EAAtC,CAAN;;;WAGKL,KAAK,CAACN,IAAN,GAAaQ,MAAb,GAAsBF,KAAK,CAACD,KAAnC;GAPK,EAQJG,MARI,CAAP;;;;;;;AAeF,AAAe,SAASK,MAAT,CAAmBC,MAAnB,EAAsC;SAC5CC,yCAAoB,CAACD,MAAD,EAASR,KAAT,CAA3B;;;;;;"}