{"version":3,"file":"index-node8.es.js","sources":["../src/config.js","../src/index.js"],"sourcesContent":["type Config = {|\n  handler?: ?Object,\n  handlers?: ?Array<Object>,\n  key?: ?string,\n  keys?: ?Array<string>,\n  pattern?: ?RegExp,\n  processor?: ?any,\n  processors?: ?Array<any>,\n  stop?: ?boolean,\n|};\n\nif (!PRODUCTION && global.__NIGHTINGALE_GLOBAL_HANDLERS) {\n  // eslint-disable-next-line no-console\n  throw new Error('nightingale: update all to ^5.0.0');\n}\n\nif (!global.__NIGHTINGALE_CONFIG) {\n  global.__NIGHTINGALE_CONFIG = [];\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map();\n  global.__NIGHTINGALE_CONFIG_DEFAULT = { handlers: [], processors: [] };\n}\n\nfunction clearCache() {\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config) {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    if (config.key) {\n      throw new Error('Cannot have key and keys for the same config');\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.patterns) {\n    throw new Error('config.patterns is no longer supported, use pattern');\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error('Cannot have processors and processors for the same config');\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config) {\n  if (global.__NIGHTINGALE_CONFIG.length !== 0) {\n    // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  global.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false) {\n  config = handleConfig(config);\n  global.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n  clearCache();\n}\n\nconst configIsForKey = key => config => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = function getConfigForLogger(key) {\n  const globalCache = global.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  if (globalCache.has(key)) {\n    return globalCache.get(key);\n  }\n\n  const loggerConfig = {\n    handlers: [],\n    processors: [],\n  };\n\n  global.__NIGHTINGALE_CONFIG.filter(configIsForKey(key)).some(config => {\n    if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n    if (config.processors) loggerConfig.processors.push(...config.processors);\n    return config.stop;\n  });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = function getConfigForLoggerRecord(key, level) {\n  const { handlers, processors } = global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n  return {\n    handlers: handlers.filter(\n      handler =>\n        level >= handler.minLevel && (!handler.isHandling || handler.isHandling(level, key)),\n    ),\n    processors,\n  };\n};\n","import Logger from 'nightingale-logger/src';\n\nexport default Logger;\nexport { configure, addConfig } from './config';\nexport levels from 'nightingale-levels';\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(logger: ?Logger) {\n  if (!logger) logger = new Logger('nightingale.listenUnhandledErrors', 'listenUnhandledErrors');\n  process.on('uncaughtException', err => logger.error('uncaughtException', { err }));\n  process.on('unhandledRejection', err => logger.error('unhandledRejection', { err }));\n}\n"],"names":["global","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","Error","key","patterns","handler","processor","configure","length","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","getConfigForLogger","globalCache","has","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","getConfigForLoggerRecord","level","minLevel","isHandling","listenUnhandledErrors","logger","Logger","on","err","error"],"mappings":"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"}