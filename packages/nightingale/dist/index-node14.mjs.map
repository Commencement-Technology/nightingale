{"version":3,"file":"index-node14.mjs","sources":["../src/config.ts","../src/index.ts"],"sourcesContent":["import type { ComputedConfigForKey, Config } from 'nightingale-logger';\nimport type { Handler } from 'nightingale-types';\n\nconst globalOrWindow: typeof global =\n  typeof global !== 'undefined' ? global : (window as typeof global);\n\nif (__DEV__ && globalOrWindow.__NIGHTINGALE_GLOBAL_HANDLERS) {\n  throw new Error('nightingale: update all to ^5.0.0');\n}\n\nif (!globalOrWindow.__NIGHTINGALE_CONFIG) {\n  globalOrWindow.__NIGHTINGALE_CONFIG = [];\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map<\n    string,\n    ComputedConfigForKey\n  >();\n  globalOrWindow.__NIGHTINGALE_CONFIG_DEFAULT = {\n    handlers: [],\n    processors: [],\n  };\n}\n\nfunction clearCache(): void {\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config): Config {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    if (config.key) {\n      throw new Error('Cannot have key and keys for the same config');\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error(\n        'Cannot have processors and processors for the same config',\n      );\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config: Config[]): void {\n  if (globalOrWindow.__NIGHTINGALE_CONFIG.length > 0) {\n    // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  globalOrWindow.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false): void {\n  config = handleConfig(config);\n  globalOrWindow.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n  clearCache();\n}\n\nconst configIsForKey = (key: string) => (config: Config) => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = (\n  key: string,\n): ComputedConfigForKey => {\n  const globalCache = globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  const existingCache = globalCache.get(key);\n\n  if (existingCache) {\n    return existingCache;\n  }\n\n  const loggerConfig: ComputedConfigForKey = {\n    handlers: [],\n    processors: [],\n  };\n\n  globalOrWindow.__NIGHTINGALE_CONFIG\n    .filter(configIsForKey(key))\n    .some((config: Config) => {\n      if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n      if (config.processors) loggerConfig.processors.push(...config.processors);\n      return config.stop;\n    });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nif (globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: number,\n  ): ComputedConfigForKey => {\n    const { handlers, processors }: ComputedConfigForKey =\n      globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        (handler: Handler) =>\n          level >= handler.minLevel &&\n          (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n","import { Logger } from 'nightingale-logger';\n\nexport { Logger } from 'nightingale-logger';\nexport { Level, Level as levels } from 'nightingale-levels';\nexport { configure, addConfig } from './config';\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(\n  logger: Logger = new Logger(\n    'nightingale:listenUnhandledErrors',\n    'UnhandledErrors',\n  ),\n): void {\n  process.on('uncaughtException', (error) => {\n    logger.error('uncaughtException', { error, unhandled: true });\n  });\n  process.on('unhandledRejection', (error) => {\n    logger.error('unhandledRejection', { error, unhandled: true });\n  });\n}\n"],"names":["globalOrWindow","global","window","__DEV__","__NIGHTINGALE_GLOBAL_HANDLERS","Error","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","key","handler","processor","configure","length","console","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalCache","existingCache","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","level","minLevel","isHandling","listenUnhandledErrors","logger","Logger","process","on","error","unhandled"],"mappings":"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"}