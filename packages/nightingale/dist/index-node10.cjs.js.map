{"version":3,"file":"index-node10.cjs.js","sources":["../src/config.ts","../src/index.ts"],"sourcesContent":["import { POB_ENV } from 'pob-babel';\nimport { Handler, Processor } from 'nightingale-types';\nimport { ComputedConfigForKey } from 'nightingale-logger';\n\nexport interface Config {\n  handler?: Handler;\n  handlers?: Array<Handler>;\n  key?: string;\n  keys?: Array<string>;\n  pattern?: RegExp;\n  processor?: Processor;\n  processors?: Array<Processor>;\n  stop?: boolean;\n}\n\ndeclare const global: any;\n\nif (POB_ENV !== 'production' && global.__NIGHTINGALE_GLOBAL_HANDLERS) {\n  // eslint-disable-next-line no-console\n  throw new Error('nightingale: update all to ^5.0.0');\n}\n\nif (!global.__NIGHTINGALE_CONFIG) {\n  global.__NIGHTINGALE_CONFIG = [];\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map();\n  global.__NIGHTINGALE_CONFIG_DEFAULT = { handlers: [], processors: [] };\n}\n\nfunction clearCache() {\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config) {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    if (config.key) {\n      throw new Error('Cannot have key and keys for the same config');\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error(\n        'Cannot have processors and processors for the same config',\n      );\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config: Array<Config>) {\n  if (global.__NIGHTINGALE_CONFIG.length !== 0) {\n    // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  global.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false) {\n  config = handleConfig(config);\n  global.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n  clearCache();\n}\n\nconst configIsForKey = (key: string) => (config: Config) => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = (key: string) => {\n  const globalCache = global.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  if (globalCache.has(key)) {\n    return globalCache.get(key);\n  }\n\n  const loggerConfig: ComputedConfigForKey = {\n    handlers: [],\n    processors: [],\n  };\n\n  global.__NIGHTINGALE_CONFIG\n    .filter(configIsForKey(key))\n    .some((config: Config) => {\n      if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n      if (config.processors) loggerConfig.processors.push(...config.processors);\n      return config.stop;\n    });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nif (global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: number,\n  ): ComputedConfigForKey => {\n    const {\n      handlers,\n      processors,\n    }: ComputedConfigForKey = global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        (handler: Handler) =>\n          level >= handler.minLevel &&\n          (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n","import Logger from 'nightingale-logger';\nimport Level from 'nightingale-levels';\n\nexport default Logger;\nexport { configure, addConfig } from './config';\nexport { Level, Level as levels };\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(\n  logger: Logger = new Logger('nightingale.listenUnhandledErrors', 'listenUnhandledErrors'),\n) {\n  process.on('uncaughtException', err => logger.error('uncaughtException', { err }));\n  process.on('unhandledRejection', err => logger.error('unhandledRejection', { err }));\n}\n"],"names":["global","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","Error","key","handler","processor","configure","length","console","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalCache","has","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","level","minLevel","isHandling","listenUnhandledErrors","logger","Logger","process","on","err","error"],"mappings":"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"}