{"version":3,"file":"index-browser.cjs.js","sources":["../src/config.ts","../src/index.ts"],"sourcesContent":["import type { ComputedConfigForKey, Config } from 'nightingale-logger';\nimport type { Handler } from 'nightingale-types';\n\nconst globalOrWindow: typeof global =\n  typeof global !== 'undefined' ? global : (window as typeof global);\n\nif (__DEV__ && globalOrWindow.__NIGHTINGALE_GLOBAL_HANDLERS) {\n  throw new Error('nightingale: update all to ^5.0.0');\n}\n\nif (!globalOrWindow.__NIGHTINGALE_CONFIG) {\n  globalOrWindow.__NIGHTINGALE_CONFIG = [];\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map<\n    string,\n    ComputedConfigForKey\n  >();\n  globalOrWindow.__NIGHTINGALE_CONFIG_DEFAULT = {\n    handlers: [],\n    processors: [],\n  };\n}\n\nfunction clearCache(): void {\n  globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config): Config {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    if (config.key) {\n      throw new Error('Cannot have key and keys for the same config');\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error(\n        'Cannot have processors and processors for the same config',\n      );\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config: Config[]): void {\n  if (globalOrWindow.__NIGHTINGALE_CONFIG.length > 0) {\n    // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  globalOrWindow.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false): void {\n  config = handleConfig(config);\n  globalOrWindow.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n  clearCache();\n}\n\nconst configIsForKey = (key: string) => (config: Config) => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = (\n  key: string,\n): ComputedConfigForKey => {\n  const globalCache = globalOrWindow.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  const existingCache = globalCache.get(key);\n\n  if (existingCache) {\n    return existingCache;\n  }\n\n  const loggerConfig: ComputedConfigForKey = {\n    handlers: [],\n    processors: [],\n  };\n\n  globalOrWindow.__NIGHTINGALE_CONFIG\n    .filter(configIsForKey(key))\n    .some((config: Config) => {\n      if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n      if (config.processors) loggerConfig.processors.push(...config.processors);\n      return config.stop;\n    });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nif (globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: number,\n  ): ComputedConfigForKey => {\n    const { handlers, processors }: ComputedConfigForKey =\n      globalOrWindow.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        (handler: Handler) =>\n          level >= handler.minLevel &&\n          (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n","import { Logger } from 'nightingale-logger';\n\nexport { Logger } from 'nightingale-logger';\nexport { Level, Level as levels } from 'nightingale-levels';\nexport { configure, addConfig } from './config';\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(\n  logger: Logger = new Logger(\n    'nightingale:listenUnhandledErrors',\n    'UnhandledErrors',\n  ),\n): void {\n  process.on('uncaughtException', (error) => {\n    logger.error('uncaughtException', { error, unhandled: true });\n  });\n  process.on('unhandledRejection', (error) => {\n    logger.error('unhandledRejection', { error, unhandled: true });\n  });\n}\n"],"names":["globalOrWindow","global","window","__NIGHTINGALE_GLOBAL_HANDLERS","Error","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","key","handler","processor","configure","length","console","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","globalCache","existingCache","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","level","minLevel","isHandling","listenUnhandledErrors","logger","Logger","process","on","error","unhandled"],"mappings":"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"}