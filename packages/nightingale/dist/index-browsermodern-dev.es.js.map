{"version":3,"file":"index-browsermodern-dev.es.js","sources":["../src/config.js","../src/index.js"],"sourcesContent":["type Config = {|\n  handler?: ?Object,\n  handlers?: ?Array<Object>,\n  key?: ?string,\n  keys?: ?Array<string>,\n  pattern?: ?RegExp,\n  processor?: ?any,\n  processors?: ?Array<any>,\n  stop?: ?boolean,\n|};\n\nif (!PRODUCTION && global.__NIGHTINGALE_GLOBAL_HANDLERS) {\n  // eslint-disable-next-line no-console\n  throw new Error('nightingale: update all to ^5.0.0');\n}\n\nif (!global.__NIGHTINGALE_CONFIG) {\n  global.__NIGHTINGALE_CONFIG = [];\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE = new Map();\n  global.__NIGHTINGALE_CONFIG_DEFAULT = { handlers: [], processors: [] };\n}\n\nfunction clearCache() {\n  global.__NIGHTINGALE_LOGGER_MAP_CACHE.clear();\n}\n\nfunction handleConfig(config: Config) {\n  if (config.keys) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    if (config.key) {\n      throw new Error('Cannot have key and keys for the same config');\n    }\n  } else if (config.key) {\n    if (config.pattern) {\n      throw new Error('Cannot have key and pattern for the same config');\n    }\n    config.keys = [config.key];\n    delete config.key;\n  }\n\n  if (config.patterns) {\n    throw new Error('config.patterns is no longer supported, use pattern');\n  }\n\n  if (config.handler) {\n    if (config.handlers) {\n      throw new Error('Cannot have handler and handlers for the same config');\n    }\n    config.handlers = [config.handler];\n    delete config.handler;\n  }\n\n  if (config.processor) {\n    if (config.processors) {\n      throw new Error('Cannot have processors and processors for the same config');\n    }\n    config.processors = [config.processor];\n    delete config.processor;\n  }\n\n  return config;\n}\n\nexport function configure(config) {\n  if (global.__NIGHTINGALE_CONFIG.length !== 0) {\n    // eslint-disable-next-line no-console\n    console.log('nightingale: warning: config overridden');\n  }\n\n  clearCache();\n  global.__NIGHTINGALE_CONFIG = config.map(handleConfig);\n}\n\nexport function addConfig(config: Config, unshift = false) {\n  config = handleConfig(config);\n  global.__NIGHTINGALE_CONFIG[unshift ? 'unshift' : 'push'](config);\n  clearCache();\n}\n\nconst configIsForKey = key => config => {\n  if (config.keys) return config.keys.includes(key);\n  if (config.pattern) return config.pattern.test(key);\n  return true;\n};\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = function getConfigForLogger(key) {\n  const globalCache = global.__NIGHTINGALE_LOGGER_MAP_CACHE;\n\n  if (globalCache.has(key)) {\n    return globalCache.get(key);\n  }\n\n  const loggerConfig = {\n    handlers: [],\n    processors: [],\n  };\n\n  global.__NIGHTINGALE_CONFIG.filter(configIsForKey(key)).some(config => {\n    if (config.handlers) loggerConfig.handlers.push(...config.handlers);\n    if (config.processors) loggerConfig.processors.push(...config.processors);\n    return config.stop;\n  });\n\n  globalCache.set(key, loggerConfig);\n  return loggerConfig;\n};\n\nglobal.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = function getConfigForLoggerRecord(key, level) {\n  const { handlers, processors } = global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n  return {\n    handlers: handlers.filter(\n      handler =>\n        level >= handler.minLevel && (!handler.isHandling || handler.isHandling(level, key)),\n    ),\n    processors,\n  };\n};\n","import Logger from 'nightingale-logger/src';\n\nexport default Logger;\nexport { configure, addConfig } from './config';\nexport levels from 'nightingale-levels';\n\n/**\n * listen to uncaughtException and unhandledRejection\n * @param {Logger} [logger]\n */\nexport function listenUnhandledErrors(logger: ?Logger) {\n  if (!logger) logger = new Logger('nightingale.listenUnhandledErrors', 'listenUnhandledErrors');\n  process.on('uncaughtException', err => logger.error('uncaughtException', { err }));\n  process.on('unhandledRejection', err => logger.error('unhandledRejection', { err }));\n}\n"],"names":["global","__NIGHTINGALE_GLOBAL_HANDLERS","Error","__NIGHTINGALE_CONFIG","__NIGHTINGALE_LOGGER_MAP_CACHE","Map","__NIGHTINGALE_CONFIG_DEFAULT","handlers","processors","clearCache","clear","handleConfig","config","keys","pattern","key","patterns","handler","processor","configure","length","log","map","addConfig","unshift","configIsForKey","includes","test","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","getConfigForLogger","globalCache","has","get","loggerConfig","filter","some","push","stop","set","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","getConfigForLoggerRecord","level","minLevel","isHandling","listenUnhandledErrors","logger","Logger","on","error","err"],"mappings":"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"}