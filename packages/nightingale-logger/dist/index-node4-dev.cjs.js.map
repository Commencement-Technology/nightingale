{"version":3,"file":"index-node4-dev.cjs.js","sources":["../src/index.js"],"sourcesContent":["/* eslint-disable max-lines, flowtype/sort-keys */\n\nimport util from 'util';\nimport levels from 'nightingale-levels';\n\ntype Record = {\n  level: number,\n  key: string,\n  displayName?: ?string,\n  datetime: Date,\n  message: string,\n  context?: ?Object,\n  metadata?: ?Object,\n  extra?: ?Object,\n};\n\ntype Handler = {\n  minLevel: number,\n  isHandling?: ?() => boolean,\n  handle?: ?(record: Record) => boolean,\n};\n\ntype Processor = (record: Record) => void;\n\ntype ConfigForLoggerType = {\n  handlers: Array<Handler>,\n  processors: Array<Processor>,\n};\n\ntype Metadata = { [string]: any };\ntype MetadataStyles = { [string]: any };\n\nif (!global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER) {\n  global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER = function(): ConfigForLoggerType {\n    return { handlers: [], processors: [] };\n  };\n}\n\nif (!global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD) {\n  global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD = (\n    key: string,\n    level: number,\n  ): ConfigForLoggerType => {\n    const { handlers, processors } = global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(key);\n\n    return {\n      handlers: handlers.filter(\n        handler =>\n          level >= handler.minLevel && (!handler.isHandling || handler.isHandling(level, key)),\n      ),\n      processors,\n    };\n  };\n}\n\n/** @private */\nfunction getConfigForLoggerRecord(key: ?string, recordLevel: number): ConfigForLoggerType {\n  return global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD(key, recordLevel);\n}\n\n/**\n * Interface that allows you to log records.\n * This records are treated by handlers\n */\nexport default class Logger {\n  key: string;\n  displayName: ?string;\n  _context: ?Object;\n\n  /**\n   * Create a new Logger\n   *\n   * @param {string} key\n   * @param {string} [displayName]\n   */\n  constructor(key: string, displayName: ?string) {\n    this.key = key;\n    this.displayName = displayName;\n\n    if (!PRODUCTION && key.includes('.')) {\n      throw new Error(`nightingale: \\`.\\` in key is no longer supported (key: ${key})`);\n    }\n  }\n\n  /** @private */\n  getHandlersAndProcessors(recordLevel: number): ConfigForLoggerType {\n    return getConfigForLoggerRecord(this.key, recordLevel);\n  }\n\n  /** @private */\n  getConfig(): ConfigForLoggerType {\n    return global.__NIGHTINGALE_GET_CONFIG_FOR_LOGGER(this.key);\n  }\n\n  /**\n   * Create a child logger\n   */\n  child(childSuffixKey: string, childDisplayName: ?string): Logger {\n    return new Logger(`${this.key}:${childSuffixKey}`, childDisplayName);\n  }\n\n  /**\n   * Create a new Logger with the same key a this attached context\n   *\n   * @example\n   * const loggerMyService = new Logger('app.myService');\n   * function someAction(arg1) {\n   *     const logger = loggerMyService.context({ arg1 });\n   *     logger.info('starting');\n   *     // do stuff\n   *     logger.info('done');\n   * }\n   *\n   */\n  context(context: Object): Logger {\n    const logger = new Logger(this.key);\n    logger.setContext(context);\n    return logger;\n  }\n\n  /**\n   * Set the context of this logger\n   *\n   * @param {Object} context\n   */\n  setContext(context: Object) {\n    this._context = context;\n  }\n\n  /**\n   * Extends existing context of this logger\n   */\n  extendsContext(extendedContext: Object) {\n    Object.assign(this._context, extendedContext);\n  }\n\n  /**\n   * Handle a record\n   *\n   * Use this only if you know what you are doing.\n   */\n  addRecord(record: Object) {\n    const { handlers, processors } = this.getHandlersAndProcessors(record.level);\n\n    if (handlers.length === 0) {\n      if (record.level > levels.ERROR) {\n        // eslint-disable-next-line no-console\n        console.log('[nightingale] no logger for > error level.', {\n          key: record.key,\n          message: record.message,\n        });\n      }\n      return;\n    }\n\n    if (processors) {\n      processors.forEach(process => process(record, record.context));\n    }\n\n    handlers.some(handler => handler.handle(record) === false);\n  }\n\n  /**\n   * Log a message\n   */\n  log(\n    message: string,\n    metadata: ?Metadata,\n    level: number = levels.INFO,\n    options: ?Object = undefined,\n  ) {\n    const context = metadata && metadata.context;\n    if (metadata) {\n      delete metadata.context;\n    }\n\n    let record = {\n      level,\n      key: this.key,\n      displayName: this.displayName,\n      datetime: new Date(),\n      message,\n      context: context || this._context,\n      metadata,\n      extra: {},\n    };\n\n    if (options) {\n      record = Object.assign(options, record);\n    }\n\n    this.addRecord(record);\n  }\n\n  /**\n   * Log a trace message\n   */\n  trace(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.TRACE, { metadataStyles });\n  }\n\n  /**\n   * Log a debug message\n   */\n  debug(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.DEBUG, { metadataStyles });\n  }\n\n  /**\n   * Notice an info message\n   */\n  notice(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.NOTICE, { metadataStyles });\n  }\n\n  /**\n   * Log an info message\n   */\n  info(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.INFO, { metadataStyles });\n  }\n\n  /**\n   * Log a warn message\n   */\n  warn(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.WARN, { metadataStyles });\n  }\n\n  /**\n   * Log an error message\n   */\n  error(message: string | Error, metadata: Object = {}, metadataStyles: ?MetadataStyles) {\n    if (message instanceof Error) {\n      metadata.error = message;\n      message = `${metadata.error.name}: ${metadata.error.message}`;\n    }\n    this.log(message, metadata, levels.ERROR, { metadataStyles });\n  }\n\n  /**\n   * Log an critical message\n   */\n  critical(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.CRITICAL, { metadataStyles });\n  }\n\n  /**\n   * Log a fatal message\n   */\n  fatal(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.FATAL, { metadataStyles });\n  }\n\n  /**\n   * Log an alert message\n   */\n  alert(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.ALERT, { metadataStyles });\n  }\n\n  /**\n   * Log an inspected value\n   */\n  inspectValue(value: any, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    if (BROWSER) {\n      throw new Error('Not supported for the browser. Prefer `debugger;`');\n    } else {\n      // Note: inspect is a special function for node:\n      // https://github.com/nodejs/node/blob/a1bda1b4deb08dfb3e06cb778f0db40023b18318/lib/util.js#L210\n      value = util.inspect(value, { depth: 6 });\n      this.log(value, metadata, levels.DEBUG, { metadataStyles, styles: ['gray'] });\n    }\n  }\n\n  /**\n   * Log a debugged var\n   */\n  inspectVar(varName: string, varValue: any, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    if (BROWSER) {\n      throw new Error('Not supported for the browser. Prefer `debugger;`');\n    } else {\n      varValue = util.inspect(varValue, { depth: 6 });\n      this.log(`${varName} = ${varValue}`, metadata, levels.DEBUG, {\n        metadataStyles,\n        styles: ['cyan'],\n      });\n    }\n  }\n\n  /**\n   * Alias for infoSuccess\n   */\n  success(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.infoSuccess(message, metadata, metadataStyles);\n  }\n\n  /**\n   * Log an info success message\n   */\n  infoSuccess(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.INFO, {\n      metadataStyles,\n      symbol: '✔',\n      styles: ['green', 'bold'],\n    });\n  }\n\n  /**\n   * Log an debug success message\n   */\n  debugSuccess(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.DEBUG, {\n      metadataStyles,\n      symbol: '✔',\n      styles: ['green'],\n    });\n  }\n\n  /**\n   * Alias for infoFail\n   */\n  fail(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.infoFail(message, metadata, metadataStyles);\n  }\n\n  /**\n   * Log an info fail message\n   */\n  infoFail(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.INFO, {\n      metadataStyles,\n      symbol: '✖',\n      styles: ['red', 'bold'],\n    });\n  }\n\n  /**\n   * Log an debug fail message\n   */\n  debugFail(message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.log(message, metadata, levels.DEBUG, {\n      metadataStyles,\n      symbol: '✖',\n      styles: ['red'],\n    });\n  }\n\n  /**\n   * @returns {number} time to pass to timeEnd\n   */\n  time(\n    message: ?string,\n    metadata: ?Metadata,\n    metadataStyles: ?MetadataStyles,\n    level: number = levels.DEBUG,\n  ): number {\n    if (message) {\n      this.log(message, metadata, level, { metadataStyles });\n    }\n\n    return Date.now();\n  }\n\n  infoTime(message: ?string, metadata: ?Metadata, metadataStyles: ?MetadataStyles): number {\n    return this.time(message, metadata, metadataStyles, levels.INFO);\n  }\n\n  /**\n   * Finds difference between when this method\n   * was called and when the respective time method\n   * was called, then logs out the difference\n   * and deletes the original record\n   */\n  timeEnd(\n    startTime: number,\n    message: string,\n    metadata: ?Metadata,\n    metadataStyles: ?MetadataStyles,\n    level: number = levels.DEBUG,\n    options: ?Object,\n  ) {\n    if (!metadata) metadata = {};\n    const now = Date.now();\n\n    const diffTime = now - startTime;\n\n    if (diffTime < 1000) {\n      metadata.readableTime = `${diffTime}ms`;\n    } else {\n      const seconds = diffTime > 1000 ? Math.floor(diffTime / 1000) : 0;\n      const ms = diffTime - seconds * 1000;\n      metadata.readableTime = `${seconds ? `${seconds}s and ` : ''}${ms}ms`;\n    }\n\n    metadata.timeMs = diffTime;\n    this.log(message, metadata, level, { ...options, metadataStyles });\n  }\n\n  /**\n   * Like timeEnd, but with INFO level\n   */\n  infoTimeEnd(time: number, message: string, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    this.timeEnd(time, message, metadata, metadataStyles, levels.INFO);\n  }\n\n  /**\n   * Like timeEnd, but with INFO level\n   */\n  infoSuccessTimeEnd(\n    time: number,\n    message: string,\n    metadata: ?Metadata,\n    metadataStyles: ?MetadataStyles,\n  ) {\n    this.timeEnd(time, message, metadata, metadataStyles, levels.INFO, {\n      symbol: '✔',\n      styles: ['green', 'bold'],\n    });\n  }\n\n  /**\n   * Log an enter in a function\n   *\n   * @example\n   * class A {\n   *   method(arg1) {\n   *     logger.enter(method, { arg1 });\n   *     // Do your stuff\n   *   }\n   * }\n   *\n   */\n  enter(fn: Function, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    metadata = {\n      functionName: fn.name,\n      ...metadata,\n    };\n    this.log('enter', metadata, levels.TRACE, { metadataStyles });\n  }\n\n  /**\n   * Log an exit in a function\n   *\n   * @example\n   * const logger = new ConsoleLogger('myNamespace.A');\n   * class A {\n   *   method(arg1) {\n   *     // Do your stuff\n   *     logger.exit(method, { arg1 });\n   *   }\n   * }\n   */\n  exit(fn: Function, metadata: ?Metadata, metadataStyles: ?MetadataStyles) {\n    metadata = {\n      functionName: fn.name,\n      ...metadata,\n    };\n    this.log('exit', metadata, levels.TRACE, { metadataStyles });\n  }\n\n  /**\n   * Wrap around a function to log enter and exit of a function\n   *\n   * @example\n   * const logger = new ConsoleLogger('myNamespace.A');\n   * class A {\n   *   method() {\n   *     logger.wrap(method, () => {\n   *       // Do your stuff\n   *     });\n   *   }\n   * }\n   *\n   * @param {Function} fn\n   * @param {Object} [metadata]\n   * @param {Object} [metadataStyles]\n   * @param {Function} callback\n   */\n  wrap(\n    fn: Function,\n    metadata: ?Metadata | Function,\n    metadataStyles: ?MetadataStyles | Function,\n    callback: Function,\n  ) {\n    if (typeof metadata === 'function') {\n      callback = metadata;\n      metadata = undefined;\n    } else if (typeof metadataStyles === 'function') {\n      callback = metadataStyles;\n      metadataStyles = undefined;\n    }\n\n    this.enter(fn, metadata, metadataStyles);\n    callback();\n    this.exit(fn);\n  }\n}\n"],"names":["global","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER","handlers","processors","__NIGHTINGALE_GET_CONFIG_FOR_LOGGER_RECORD","key","level","filter","handler","minLevel","isHandling","getConfigForLoggerRecord","recordLevel","Logger","displayName","includes","Error","childSuffixKey","childDisplayName","context","logger","setContext","_context","extendedContext","assign","record","getHandlersAndProcessors","length","levels","ERROR","log","message","forEach","process","some","handle","metadata","INFO","options","undefined","Date","Object","addRecord","metadataStyles","TRACE","DEBUG","NOTICE","WARN","error","name","CRITICAL","FATAL","ALERT","value","util","inspect","depth","styles","varName","varValue","infoSuccess","infoFail","now","time","startTime","diffTime","readableTime","seconds","Math","floor","timeMs","timeEnd","fn","callback","enter","exit"],"mappings":"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"}