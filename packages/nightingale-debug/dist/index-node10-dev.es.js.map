{"version":3,"file":"index-node10-dev.es.js","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable complexity */\nimport Level from 'nightingale-levels';\n\nconst specialRegexpChars = /[\\\\^$+?.()|[\\]{}]/;\n\ntype TestFunction = (string: string) => boolean;\nexport type DebugValueType = string | RegExp | Array<string>;\n\nconst createTestFunctionFromRegexp = (regexp: RegExp): TestFunction => (\n  string: string,\n) => regexp.test(string);\n\nconst createTestFunctionFromRegexpString = (value: string): TestFunction => {\n  if (!value.endsWith('/')) throw new Error('Invalid RegExp DEBUG value');\n  return createTestFunctionFromRegexp(new RegExp(value.slice(1, -1)));\n};\n\nconst createTestFunctionFromValue = (value: string): TestFunction => {\n  if (value.endsWith(':*')) {\n    value = value.slice(0, -2);\n    return (string: string) => string.startsWith(value);\n  }\n\n  return (string: string) => string === value;\n};\n\nexport type FindDebugLevel = (minLevel: Level, key: string) => Level;\n\nexport default function createFindDebugLevel(\n  debugValue?: DebugValueType,\n): FindDebugLevel {\n  let wilcard = false;\n  const debugValues: Array<TestFunction> = [];\n  const skips: Array<TestFunction> = [];\n\n  if (!Array.isArray(debugValue)) {\n    if (debugValue instanceof RegExp) {\n      debugValues.push(createTestFunctionFromRegexp(debugValue));\n      debugValue = undefined;\n    } else if (debugValue) {\n      debugValue = debugValue.trim();\n\n      if (debugValue.startsWith('/')) {\n        debugValues.push(createTestFunctionFromRegexpString(debugValue));\n        debugValue = undefined;\n      } else {\n        debugValue = debugValue.split(/[\\s,]+/);\n      }\n    }\n  }\n\n  if (debugValue) {\n    (debugValue as Array<string>).forEach((value) => {\n      if (specialRegexpChars.test(value)) {\n        throw new Error(\n          `Invalid debug value: \"${value}\" (contains special chars)`,\n        );\n      }\n\n      if (!value) return;\n\n      if (value === '*') {\n        wilcard = true;\n        return;\n      }\n\n      if (value.startsWith('-')) {\n        skips.push(createTestFunctionFromValue(value.substr(1)));\n      } else if (!wilcard) {\n        debugValues.push(createTestFunctionFromValue(value));\n      }\n    });\n  }\n\n  if (wilcard) {\n    if (skips.length === 0) {\n      return () => Level.ALL;\n    } else {\n      return (minLevel: Level, key: string) =>\n        skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n  }\n\n  if (debugValues.length === 0) {\n    return (minLevel: number) => minLevel;\n  }\n\n  return (minLevel: Level, key: string) => {\n    if (minLevel === Level.ALL || !key) {\n      return minLevel;\n    }\n\n    if (debugValues.some((debugValue) => debugValue(key))) {\n      return skips.some((skip) => skip(key)) ? minLevel : Level.ALL;\n    }\n\n    return minLevel;\n  };\n}\n"],"names":["specialRegexpChars","createTestFunctionFromRegexp","regexp","string","test","createTestFunctionFromRegexpString","value","endsWith","Error","RegExp","slice","createTestFunctionFromValue","startsWith","createFindDebugLevel","debugValue","wilcard","debugValues","skips","Array","isArray","push","undefined","trim","split","forEach","substr","length","Level","ALL","minLevel","key","some","skip"],"mappings":"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"}