{"version":3,"file":"index-node8.cjs.js","sources":["../src/createBody.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport markdownFormatter from 'nightingale-markdown-formatter';\nimport rawFormatter from 'nightingale-raw-formatter';\nimport Level from 'nightingale-levels';\nimport { LogRecord } from 'nightingale-types';\nimport SlackConfig from './SlackConfig';\n\nconst levelToSlackColor: { [level: number]: string } = {\n  [Level.TRACE]: '#808080',\n  [Level.DEBUG]: '#808080',\n  [Level.INFO]: '#808080',\n  [Level.WARN]: 'warning',\n  [Level.ERROR]: 'danger',\n  [Level.CRITICAL]: 'danger',\n  [Level.FATAL]: 'danger',\n  [Level.EMERGENCY]: 'danger',\n};\n\nexport default function createBody<T>(\n  record: LogRecord<T>,\n  slackConfig: SlackConfig,\n) {\n  const markdown = markdownFormatter(record);\n  const raw = rawFormatter(record);\n\n  return {\n    channel: slackConfig.channel,\n    username: slackConfig.username,\n    icon_url: slackConfig.iconUrl,\n    icon_emoji: slackConfig.iconEmoji,\n    attachments: [\n      {\n        fallback: raw,\n        title: record.message,\n        color: levelToSlackColor[record.level],\n        text: markdown,\n        mrkdwn_in: ['text'],\n      },\n    ],\n  };\n}\n","import { post } from 'request';\nimport { LogRecord, Handle } from 'nightingale-types';\nimport SlackConfig from './SlackConfig';\nimport createBody from './createBody';\n\nconst createHandler = (slackConfig: SlackConfig) => <T>(\n  record: LogRecord<T>,\n) => {\n  const body = createBody(record, slackConfig);\n\n  post({ url: slackConfig.webhookUrl, body, json: true }).on(\n    'error',\n    (err2: Error) => console.error(err2.stack),\n  );\n};\n\nexport default class SlackHandler {\n  minLevel: number;\n\n  handle: Handle;\n\n  constructor(slackConfig: SlackConfig, minLevel: number) {\n    this.minLevel = minLevel;\n    this.handle = createHandler(slackConfig);\n  }\n}\n"],"names":["levelToSlackColor","Level","TRACE","DEBUG","INFO","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","createBody","record","slackConfig","markdown","markdownFormatter","raw","rawFormatter","channel","username","icon_url","iconUrl","icon_emoji","iconEmoji","attachments","fallback","title","message","color","level","text","mrkdwn_in","createHandler","body","post","url","webhookUrl","json","on","err2","console","error","stack","SlackHandler","constructor","minLevel","handle"],"mappings":";;;;;;;;;;;AAAA;AACA,AAMA,MAAMA,iBAA8C,GAAG;GACpDC,KAAK,CAACC,KAAP,GAAe,SADsC;GAEpDD,KAAK,CAACE,KAAP,GAAe,SAFsC;GAGpDF,KAAK,CAACG,IAAP,GAAc,SAHuC;GAIpDH,KAAK,CAACI,IAAP,GAAc,SAJuC;GAKpDJ,KAAK,CAACK,KAAP,GAAe,QALsC;GAMpDL,KAAK,CAACM,QAAP,GAAkB,QANmC;GAOpDN,KAAK,CAACO,KAAP,GAAe,QAPsC;GAQpDP,KAAK,CAACQ,SAAP,GAAmB;CARrB;AAWA,AAAe,SAASC,UAAT,CACbC,MADa,EAEbC,WAFa,EAGb;QACMC,QAAQ,GAAGC,iBAAiB,CAACH,MAAD,CAAlC;QACMI,GAAG,GAAGC,YAAY,CAACL,MAAD,CAAxB;SAEO;IACLM,OAAO,EAAEL,WAAW,CAACK,OADhB;IAELC,QAAQ,EAAEN,WAAW,CAACM,QAFjB;IAGLC,QAAQ,EAAEP,WAAW,CAACQ,OAHjB;IAILC,UAAU,EAAET,WAAW,CAACU,SAJnB;IAKLC,WAAW,EAAE,CACX;MACEC,QAAQ,EAAET,GADZ;MAEEU,KAAK,EAAEd,MAAM,CAACe,OAFhB;MAGEC,KAAK,EAAE3B,iBAAiB,CAACW,MAAM,CAACiB,KAAR,CAH1B;MAIEC,IAAI,EAAEhB,QAJR;MAKEiB,SAAS,EAAE,CAAC,MAAD;KANF;GALf;;;ACpBF,MAAMC,aAAa,GAAInB,WAAD,IACpBD,MADkD,IAE/C;QACGqB,IAAI,GAAGtB,UAAU,CAACC,MAAD,EAASC,WAAT,CAAvB;EAEAqB,YAAI,CAAC;IAAEC,GAAG,EAAEtB,WAAW,CAACuB,UAAnB;IAA+BH,IAA/B;IAAqCI,IAAI,EAAE;GAA5C,CAAJ,CAAwDC,EAAxD,CACE,OADF,EAEGC,IAAD,IAAiBC,OAAO,CAACC,KAAR,CAAcF,IAAI,CAACG,KAAnB,CAFnB;CALF;;AAWA,AAAe,MAAMC,YAAN,CAAmB;EAKhCC,WAAW,CAAC/B,WAAD,EAA2BgC,QAA3B,EAA6C;SACjDA,QAAL,GAAgBA,QAAhB;SACKC,MAAL,GAAcd,aAAa,CAACnB,WAAD,CAA3B;;;;;;;"}