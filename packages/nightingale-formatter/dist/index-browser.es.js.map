{"version":3,"file":"index-browser.es.js","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import { Level } from 'nightingale-levels';\n\nexport type LevelToStyles = Readonly<Record<number, string[]>>;\n\nexport const levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n","import { Level } from 'nightingale-levels';\n\nexport type LevelToSymbol = Readonly<Record<number, string>>;\n\nexport const levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n","export type StyleToHexColor = Readonly<Record<string, string>>;\n\nexport const styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n","import { styleToHexColor } from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport type StyleToHtmlStyle = Readonly<Record<string, HtmlStyle>>;\n\nexport const styleToHtmlStyleThemeLight: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: {\n    open: 'text-decoration: underline',\n    close: 'text-decoration: none',\n  },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: {\n    open: 'text-decoration: line-through',\n    close: 'text-decoration: none',\n  },\n\n  black: { open: 'color: black', close: 'color: currentcolor' },\n  red: { open: 'color: #ff0020', close: 'color: currentcolor' },\n  green: { open: 'color: #00b317', close: 'color: currentcolor' },\n  yellow: { open: 'color: #ffcc00', close: 'color: currentcolor' },\n  blue: { open: 'color: #00a0ff', close: 'color: currentcolor' },\n  magenta: { open: 'color: #ff00a0', close: 'color: currentcolor' },\n  cyan: { open: 'color: #00cfd8', close: 'color: currentcolor' },\n  white: { open: 'color: white', close: 'color: currentcolor' },\n  gray: { open: 'color: gray', close: 'color: currentcolor' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: {\n    open: `color: #${styleToHexColor.orange}`,\n    close: 'color: currentcolor',\n  },\n  grayLight: {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n  'gray-light': {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n};\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: 'color: lightgray', close: 'color: currentcolor' },\n};\n","/* eslint-disable max-lines, @typescript-eslint/no-use-before-define */\nimport type { Styles } from 'nightingale-types';\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'undefined':\n          styles = ['cyan'];\n          break;\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'bigint':\n          styles = ['red'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n        case 'object':\n        case 'function':\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack?.startsWith(value.message)\n      ? stack\n      : `${value.message}\\n${stack || ''}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (typeofValue === 'bigint') {\n    stringValue = (value as bigint).toString();\n  } else if (typeofValue === 'symbol') {\n    stringValue = (value as symbol).toString();\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: '', formattedKey: '' };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[key as unknown as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes('\\n'))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? '' : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? '' : ' ')}${\n      breakLine ? ',\\n' : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}', formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: '[',\n      suffix: ']',\n      prefixSuffixSpace: '',\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']', formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from 'nightingale-types';\nimport type { StyleFn, ObjectStyles } from './formatObject';\nimport { formatObject } from './formatObject';\nimport { levelToStyles } from './levelToStyles';\nimport { levelToSymbol } from './levelToSymbol';\n\nexport function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): string {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    objectStyles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, objectStyles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","styleToHtmlStyleThemeDark","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","key","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","includes","v","fv","join","object","has","keys","add","result","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":"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"}