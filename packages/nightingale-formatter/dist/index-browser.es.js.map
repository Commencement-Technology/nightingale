{"version":3,"file":"index-browser.es.js","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import { Level } from 'nightingale-levels';\n\nexport type LevelToStyles = Readonly<Record<number, string[]>>;\n\nexport const levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n","import { Level } from 'nightingale-levels';\n\nexport type LevelToSymbol = Readonly<Record<number, string>>;\n\nexport const levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n","export type StyleToHexColor = Readonly<Record<string, string>>;\n\nexport const styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n","import { styleToHexColor } from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport type StyleToHtmlStyle = Readonly<Record<string, HtmlStyle>>;\n\nexport const styleToHtmlStyleThemeLight: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: {\n    open: 'text-decoration: underline',\n    close: 'text-decoration: none',\n  },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: {\n    open: 'text-decoration: line-through',\n    close: 'text-decoration: none',\n  },\n\n  black: { open: 'color: black', close: 'color: currentcolor' },\n  red: { open: 'color: #ff0020', close: 'color: currentcolor' },\n  green: { open: 'color: #00b317', close: 'color: currentcolor' },\n  yellow: { open: 'color: #ffcc00', close: 'color: currentcolor' },\n  blue: { open: 'color: #00a0ff', close: 'color: currentcolor' },\n  magenta: { open: 'color: #ff00a0', close: 'color: currentcolor' },\n  cyan: { open: 'color: #00cfd8', close: 'color: currentcolor' },\n  white: { open: 'color: white', close: 'color: currentcolor' },\n  gray: { open: 'color: gray', close: 'color: currentcolor' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: {\n    open: `color: #${styleToHexColor.orange}`,\n    close: 'color: currentcolor',\n  },\n  grayLight: {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n  'gray-light': {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n};\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: 'color: lightgray', close: 'color: currentcolor' },\n};\n","/* eslint-disable max-lines, @typescript-eslint/no-use-before-define */\nimport type { Styles } from 'nightingale-types';\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'undefined':\n          styles = ['cyan'];\n          break;\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'bigint':\n          styles = ['red'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n        case 'object':\n        case 'function':\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack?.startsWith(value.message)\n      ? stack\n      : `${value.message}\\n${stack || ''}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (typeofValue === 'bigint') {\n    stringValue = (value as bigint).toString();\n  } else if (typeofValue === 'symbol') {\n    stringValue = (value as symbol).toString();\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: '', formattedKey: '' };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[key as unknown as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes('\\n'))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? '' : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? '' : ' ')}${\n      breakLine ? ',\\n' : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}', formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: '[',\n      suffix: ']',\n      prefixSuffixSpace: '',\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']', formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from 'nightingale-types';\nimport type { StyleFn, ObjectStyles } from './formatObject';\nimport { formatObject } from './formatObject';\nimport { levelToStyles } from './levelToStyles';\nimport { levelToSymbol } from './levelToSymbol';\n\nexport function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): string {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    objectStyles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, objectStyles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","styleToHtmlStyleThemeDark","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","key","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","includes","v","fv","join","object","has","keys","add","result","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":";;;;AAIaA,IAAAA,aAA4B,IACtCC,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,KAAK,CAACC,KAAK,CAAG,GAAA,CAAC,MAAM,CAAC,EACtBD,cAAAA,CAAAA,KAAK,CAACE,KAAK,CAAA,GAAG,CAAC,MAAM,CAAC,EAAA,cAAA,CAEtBF,KAAK,CAACG,IAAI,CAAG,GAAA,CAAC,QAAQ,CAAC,EACvBH,cAAAA,CAAAA,KAAK,CAACI,KAAK,IAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAA,cAAA,CAC7BJ,KAAK,CAACK,QAAQ,CAAA,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAA,cAAA,CAChCL,KAAK,CAACM,KAAK,CAAG,GAAA,CAAC,OAAO,EAAE,OAAO,CAAC,iBAChCN,KAAK,CAACO,SAAS,CAAA,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,EACtC,cAAA;;;ACTM,IAAMC,aAA4B,IACtCR,cAAAA,GAAAA,EAAAA,EAAAA,cAAAA,CAAAA,KAAK,CAACC,KAAK,CAAA,GAAG,GAAG,EAAA,cAAA,CACjBD,KAAK,CAACE,KAAK,CAAG,GAAA,GAAG,EACjBF,cAAAA,CAAAA,KAAK,CAACS,IAAI,IAAG,GAAG,EAAA,cAAA,CAChBT,KAAK,CAACG,IAAI,CAAA,GAAG,GAAG,EAChBH,cAAAA,CAAAA,KAAK,CAACI,KAAK,CAAA,GAAG,GAAG,EACjBJ,cAAAA,CAAAA,KAAK,CAACK,QAAQ,CAAG,GAAA,GAAG,iBACpBL,KAAK,CAACM,KAAK,CAAA,GAAG,GAAG,EAAA,cAAA,CACjBN,KAAK,CAACO,SAAS,CAAG,GAAA,GAAG,EACvB,cAAA;;ACXM,IAAMG,eAAgC,GAAG;AAC9CC,EAAAA,MAAM,EAAE,QAAQ;AAChBC,EAAAA,SAAS,EAAE,QAAQ;AACnB,EAAA,YAAY,EAAE,QAAA;AAChB;;ACGO,IAAMC,0BAA4C,GAAG;AAC1D;AACAC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,mBAAmB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACjEC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,IAAI,EAAE,oBAAoB;AAAEC,IAAAA,KAAK,EAAE,oBAAA;GAAsB;AACnEE,EAAAA,SAAS,EAAE;AACTH,IAAAA,IAAI,EAAE,4BAA4B;AAClCC,IAAAA,KAAK,EAAE,uBAAA;GACR;AACDG,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAE,6CAA6C;AACnDC,IAAAA,KAAK,EAAE,sCAAA;GACR;AACDI,EAAAA,aAAa,EAAE;AACbL,IAAAA,IAAI,EAAE,+BAA+B;AACrCC,IAAAA,KAAK,EAAE,uBAAA;GACR;AAEDK,EAAAA,KAAK,EAAE;AAAEN,IAAAA,IAAI,EAAE,cAAc;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC7DM,EAAAA,GAAG,EAAE;AAAEP,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC7DO,EAAAA,KAAK,EAAE;AAAER,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC/DQ,EAAAA,MAAM,EAAE;AAAET,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAChES,EAAAA,IAAI,EAAE;AAAEV,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC9DU,EAAAA,OAAO,EAAE;AAAEX,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACjEW,EAAAA,IAAI,EAAE;AAAEZ,IAAAA,IAAI,EAAE,gBAAgB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC9DY,EAAAA,KAAK,EAAE;AAAEb,IAAAA,IAAI,EAAE,cAAc;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAC7Da,EAAAA,IAAI,EAAE;AAAEd,IAAAA,IAAI,EAAE,aAAa;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAE3Dc,EAAAA,OAAO,EAAE;AAAEf,IAAAA,IAAI,EAAE,mBAAmB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACpEe,EAAAA,KAAK,EAAE;AAAEhB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACpEgB,EAAAA,OAAO,EAAE;AAAEjB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACtEiB,EAAAA,QAAQ,EAAE;AAAElB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACvEkB,EAAAA,MAAM,EAAE;AAAEnB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACrEmB,EAAAA,SAAS,EAAE;AAAEpB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACxEoB,EAAAA,MAAM,EAAE;AAAErB,IAAAA,IAAI,EAAE,qBAAqB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AACrEqB,EAAAA,OAAO,EAAE;AAAEtB,IAAAA,IAAI,EAAE,mBAAmB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;GAAuB;AAEpEL,EAAAA,MAAM,EAAE;IACNI,IAAI,EAAA,UAAA,GAAaL,eAAe,CAACC,MAAQ;AACzCK,IAAAA,KAAK,EAAE,qBAAA;GACR;AACDJ,EAAAA,SAAS,EAAE;IACTG,IAAI,EAAA,UAAA,GAAaL,eAAe,CAACE,SAAW;AAC5CI,IAAAA,KAAK,EAAE,qBAAA;GACR;AACD,EAAA,YAAY,EAAE;IACZD,IAAI,EAAA,UAAA,GAAaL,eAAe,CAACE,SAAW;AAC5CI,IAAAA,KAAK,EAAE,qBAAA;AACT,GAAA;AACF,EAAC;AAEM,IAAMsB,yBAA2C,GAAA,QAAA,CAAA,EAAA,EACnDzB,0BAA0B,EAAA;EAC7BQ,KAAK,EAAER,0BAA0B,CAACe,KAAK;EACvCE,OAAO,EAAEjB,0BAA0B,CAACwB,OAAO;EAC3CT,KAAK,EAAEf,0BAA0B,CAACQ,KAAK;EACvCgB,OAAO,EAAExB,0BAA0B,CAACiB,OAAO;AAC3CD,EAAAA,IAAI,EAAE;AAAEd,IAAAA,IAAI,EAAE,kBAAkB;AAAEC,IAAAA,KAAK,EAAE,qBAAA;AAAsB,GAAA;AAAC,CACjE;;AClED;;AAYA,IAAMuB,SAAkB,GAAG,SAArBA,SAAkB,CAAIC,MAAc,EAAEC,KAAa,EAAA;AAAA,EAAA,OAAaA,KAAK,CAAA;AAAA,CAAA,CAAA;AAuC3E,SAASC,YAAY,CAACC,GAAY,EAAU;EAC1C,IAAI;AACF,IAAA,OAAOC,IAAI,CAACC,SAAS,CAACF,GAAG,CAAC,CAACG,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;AAClD,GAAC,CAAC,OAAM,OAAA,EAAA;AACN,IAAA,OAAO,YAAY,CAAA;AACrB,GAAA;AACF,CAAA;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIN,KAAa,EAAA;EAAA,OAAsB;AAChEO,IAAAA,WAAW,EAAEP,KAAK;AAClBQ,IAAAA,cAAc,EAAER,KAAAA;GACjB,CAAA;AAAA,CAAC,CAAA;AAEF,SAASS,mBAAmB,CAC1BT,KAAc,EACdU,OAAgB,EAChBX,MAAc,EAEE,IAAA,EAAA;EAAA,IADdY,OAAO,QAAPA,OAAO;AAAEC,IAAAA,KAAK,QAALA,KAAK;AAAEC,IAAAA,QAAQ,QAARA,QAAQ;AAAEC,IAAAA,OAAO,QAAPA,OAAO,CAAA;EAEnC,IAAMC,WAAW,GAAG,OAAOf,KAAK,CAAA;EAEhC,IAAI,CAACD,MAAM,EAAE;IACX,IAAIC,KAAK,IAAI,IAAI,EAAE;MACjBD,MAAM,GAAG,CAAC,MAAM,CAAC,CAAA;AACnB,KAAC,MAAM;AACL,MAAA,QAAQgB,WAAW;AACjB,QAAA,KAAK,WAAW;UACdhB,MAAM,GAAG,CAAC,MAAM,CAAC,CAAA;AACjB,UAAA,MAAA;AACF,QAAA,KAAK,SAAS;UACZA,MAAM,GAAG,CAAC,OAAO,CAAC,CAAA;AAClB,UAAA,MAAA;AACF,QAAA,KAAK,QAAQ;UACXA,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAA;AACnB,UAAA,MAAA;AACF,QAAA,KAAK,QAAQ;UACXA,MAAM,GAAG,CAAC,KAAK,CAAC,CAAA;AAChB,UAAA,MAAA;AACF,QAAA,KAAK,QAAQ;UACXA,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAA;AACnB,UAAA,MAAA;AACF,QAAA,KAAK,QAAQ;UACXA,MAAM,GAAG,CAAC,SAAS,CAAC,CAAA;AACpB,UAAA,MAAA;AAGM,OAAA;AAEZ,KAAA;AACF,GAAA;AAEA,EAAA,IAAIQ,WAAmB,CAAA;EACvB,IAAIP,KAAK,KAAK,IAAI,EAAE;AAClBO,IAAAA,WAAW,GAAG,MAAM,CAAA;AACtB,GAAC,MAAM,IAAIP,KAAK,KAAKgB,SAAS,EAAE;AAC9BT,IAAAA,WAAW,GAAG,WAAW,CAAA;AAC3B,GAAC,MAAM,IAAIQ,WAAW,KAAK,SAAS,EAAE;AACpC;AACAR,IAAAA,WAAW,GAAIP,KAAK,CAASiB,QAAQ,EAAY,CAAA;AACnD,GAAC,MAAM,IAAKjB,KAAK,CAAmBkB,WAAW,KAAKC,MAAM,EAAE;IAC1D,IAAIP,KAAK,IAAIC,QAAQ,EAAE;AACrBN,MAAAA,WAAW,GAAG,aAAa,CAAA;AAC7B,KAAC,MAAM;AACL,MAAA,OAAOa,oBAAoB,CACzBpB,KAAK,EACLU,OAAO,EACPM,SAAS,EACT;AACEL,QAAAA,OAAO,EAAPA,OAAO;QACPC,KAAK,EAAEA,KAAK,GAAG,CAAC;AAChBC,QAAAA,QAAQ,EAARA,QAAQ;AACRC,QAAAA,OAAO,EAAPA,OAAAA;AACF,OAAC,CACF,CAAA;AACH,KAAA;GACD,MAAM,IAAIO,KAAK,CAACC,OAAO,CAACtB,KAAK,CAAC,EAAE;IAC/B,IAAIY,KAAK,IAAIC,QAAQ,EAAE;AACrBN,MAAAA,WAAW,GAAG,YAAY,CAAA;AAC5B,KAAC,MAAM;AACL,MAAA,OAAOgB,mBAAmB,CAACvB,KAAK,EAAEU,OAAO,EAAE;AACzCC,QAAAA,OAAO,EAAPA,OAAO;QACPC,KAAK,EAAEA,KAAK,GAAG,CAAC;AAChBC,QAAAA,QAAQ,EAARA,QAAQ;AACRC,QAAAA,OAAO,EAAPA,OAAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAC,MAAM,IAAId,KAAK,YAAYwB,KAAK,EAAE;AACjC,IAAA,IAAMC,KAAK,GAAGzB,KAAK,CAACyB,KAAK,CAAA;IACzBlB,WAAW,GAAGkB,KAAK,IAALA,IAAAA,IAAAA,KAAK,CAAEC,UAAU,CAAC1B,KAAK,CAAC2B,OAAO,CAAC,GAC1CF,KAAK,GACFzB,KAAK,CAAC2B,OAAO,GAAKF,IAAAA,IAAAA,KAAK,IAAI,EAAE,CAAE,CAAA;AACxC,GAAC,MAAM,IAAIzB,KAAK,YAAY4B,GAAG,EAAE;AAC/B,IAAA,IAAMC,IAAI,GAAG7B,KAAK,CAACkB,WAAW,CAACW,IAAI,CAAA;IACnC,IAAIjB,KAAK,IAAIC,QAAQ,EAAE;MACrBN,WAAW,GAAA,GAAA,GAAOsB,IAAI,GAAM,MAAA,CAAA;AAC9B,KAAC,MAAM;AACL,MAAA,OAAOC,iBAAiB,CAACD,IAAI,EAAE7B,KAAK,EAAEU,OAAO,EAAE;AAC7CC,QAAAA,OAAO,EAAPA,OAAO;QACPC,KAAK,EAAEA,KAAK,GAAG,CAAC;AAChBC,QAAAA,QAAQ,EAARA,QAAQ;AACRC,QAAAA,OAAO,EAAPA,OAAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAC,MAAM,IAAIC,WAAW,KAAK,QAAQ,EAAE;AACnCR,IAAAA,WAAW,GAAIP,KAAK,CAAYiB,QAAQ,EAAE,CAAA;AAC5C,GAAC,MAAM,IAAIF,WAAW,KAAK,QAAQ,EAAE;AACnCR,IAAAA,WAAW,GAAIP,KAAK,CAAYiB,QAAQ,EAAE,CAAA;AAC5C,GAAC,MAAM,IAAIjB,KAAK,YAAY+B,GAAG,EAAE;AAC/B,IAAA,IAAMF,KAAI,GAAG7B,KAAK,CAACkB,WAAW,CAACW,IAAI,CAAA;IACnC,IAAIjB,KAAK,IAAIC,QAAQ,EAAE;MACrBN,WAAW,GAAA,GAAA,GAAOsB,KAAI,GAAM,MAAA,CAAA;AAC9B,KAAC,MAAM;AACL,MAAA,OAAOG,iBAAiB,CAACH,KAAI,EAAE7B,KAAK,EAAEU,OAAO,EAAE;AAC7CC,QAAAA,OAAO,EAAPA,OAAO;QACPC,KAAK,EAAEA,KAAK,GAAG,CAAC;AAChBC,QAAAA,QAAQ,EAARA,QAAQ;AACRC,QAAAA,OAAO,EAAPA,OAAAA;AACF,OAAC,CAAC,CAAA;AACJ,KAAA;AACF,GAAC,MAAM,IAAId,KAAK,YAAYiC,OAAO,EAAE;AACnC1B,IAAAA,WAAW,GAAG,cAAc,CAAA;AAC9B,GAAC,MAAM,IAAIP,KAAK,YAAYkC,OAAO,EAAE;AACnC3B,IAAAA,WAAW,GAAG,cAAc,CAAA;AAC9B,GAAC,MAAM;AACLA,IAAAA,WAAW,GAAGN,YAAY,CAACD,KAAK,CAAC,CAAA;AACnC,GAAA;AAEA,EAAA,IAAMQ,cAAc,GAAGE,OAAO,CAACX,MAAM,EAAEQ,WAAW,CAAC,CAAA;EAEnD,OAAO;AACLA,IAAAA,WAAW,EAAXA,WAAW;AACXC,IAAAA,cAAc,EAAdA,cAAAA;GACD,CAAA;AACH,CAAA;AAEA,IAAM2B,SAAS,GAAG,GAAG,CAAA;AAErB,IAAMC,iBAAoC,GAAG,SAAvCA,iBAAoC,CACxCC,GAAW,EACX3B,OAAgB,EAEC;EACjB,OAAO;IACL4B,SAAS,EAAKD,GAAG,GAAI,IAAA;IACrBE,YAAY,EAAK7B,OAAO,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAK2B,GAAG,GAAI,GAAA,CAAA,GAAA,GAAA;GAC5D,CAAA;AACH,CAAC,CAAA;AAED,IAAMG,aAAmC,GAAG,SAAtCA,aAAmC,GAItB;EACjB,OAAO;AAAEF,IAAAA,SAAS,EAAE,EAAE;AAAEC,IAAAA,YAAY,EAAE,EAAA;GAAI,CAAA;AAC5C,CAAC,CAAA;AAED,IAAME,oBAAwC,GAAG,SAA3CA,oBAAwC,CAC5CJ,GAAY,EACZ3B,OAAgB,EAChBgC,oBAA0C,EACzB;EACjB,IAAwCjC,oBAAAA,GAAAA,mBAAmB,CACzD4B,GAAG,EACHvC,SAAS,EACTkB,SAAS,EACT0B,oBAAoB,CACrB;AALOnC,IAAAA,WAAW,wBAAXA,WAAW;AAAEC,IAAAA,cAAc,wBAAdA,cAAc,CAAA;EAMnC,OAAO;IACL8B,SAAS,EAAK/B,WAAW,GAAM,MAAA;IAC/BgC,YAAY,EAAK7B,OAAO,CAAC,CAAC,YAAY,EAAE,MAAM,CAAC,EAAKF,cAAc,GAAI,GAAA,CAAA,GAAA,GAAA;GACvE,CAAA;AACH,CAAC,CAAA;AAED,IAAMmC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAC1BC,MAAmB,EACnBlC,OAAgB,EAChBmC,YAAsC,EAQnB,KAAA,EAAA,KAAA,EAAA;EAAA,IAPjBlC,OAAO,SAAPA,OAAO;AAAEC,IAAAA,KAAK,SAALA,KAAK;AAAEC,IAAAA,QAAQ,SAARA,QAAQ;AAAEC,IAAAA,OAAO,SAAPA,OAAO,CAAA;EAAA,IAEjCgC,MAAM,SAANA,MAAM;AACNC,IAAAA,MAAM,SAANA,MAAM;AAAA,IAAA,qBAAA,GAAA,KAAA,CACNC,iBAAiB;AAAjBA,IAAAA,iBAAiB,sCAAG,GAAG,GAAA,qBAAA;AACvBC,IAAAA,SAAS,SAATA,SAAS,CAAA;EAGX,IAAIC,SAAS,GAAG,KAAK,CAAA;EACrB,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,GAAA;AAAA,IAAA,OAAiBzC,OAAO,CAAC,CAAC,MAAM,CAAC,EAAEyB,SAAS,CAAC,CAAA;AAAA,GAAA,CAAA;AAErE,EAAA,IAAMiB,cAAc,GAAGR,MAAM,CAACS,MAAM,GAAG,CAAC,CAAA;EACxC,IAAMC,eAAiC,GAAGV,MAAM,CAACW,GAAG,CAClD,UAAA,KAAA,EAAiBC,KAAa,EAAK;IAAA,IAAhCnB,GAAG,SAAHA,GAAG;AAAErC,MAAAA,KAAK,SAALA,KAAK,CAAA;AAEX,IAAA,IAAM0C,oBAAoB,GAAG;AAC3B/B,MAAAA,OAAO,EAAPA,OAAO;MACPC,KAAK,EAHWA,KAAK,GAAG,CAGR;AAChBC,MAAAA,QAAQ,EAARA,QAAQ;AACRC,MAAAA,OAAO,EAAPA,OAAAA;KACD,CAAA;;AAED;AACA,IAAA,IAAA,UAAA,GAAoCmC,SAAS,CAC3CZ,GAAG,EACH3B,OAAO,EACPgC,oBAAoB,CACrB;AAJOJ,MAAAA,SAAS,cAATA,SAAS;AAAEC,MAAAA,YAAY,cAAZA,YAAY,CAAA;AAM/B,IAAA,IAAA,qBAAA,GAAsC9B,mBAAmB,CACvDT,KAAK,EACLU,OAAO,EACP2B,GAAG,IAAIQ,YAAY,GACfA,YAAY,CAACR,GAAG,CAAsB,GACtCrB,SAAS,EACb0B,oBAAoB,CACrB;AAPKnC,MAAAA,WAAW,yBAAXA,WAAW;AAAEC,MAAAA,cAAc,yBAAdA,cAAc,CAAA;AASjC,IAAA,IACED,WAAW,KACVA,WAAW,CAAC8C,MAAM,GAAG,EAAE,IAAI9C,WAAW,CAACkD,QAAQ,CAAC,IAAI,CAAC,CAAC,EACvD;AACAP,MAAAA,SAAS,GAAG,IAAI,CAAA;MAChB3C,WAAW,GAAGA,WAAW,CAACF,OAAO,CAAC,KAAK,EAAA,IAAA,GAAOM,OAAO,CAAG,CAAA;MACxDH,cAAc,GAAGA,cAAc,CAACH,OAAO,CAAC,KAAK,EAAA,IAAA,GAAOM,OAAO,CAAG,CAAA;AAChE,KAAA;IAEA,OAAO;AACLJ,MAAAA,WAAW,EACT+B,SAAS,GAAG/B,WAAW,IAAIiD,KAAK,KAAKJ,cAAc,GAAG,EAAE,GAAGjB,SAAS,CAAC;AACvE3B,MAAAA,cAAc,EACZ+B,YAAY,GACZ/B,cAAc,IACbgD,KAAK,KAAKJ,cAAc,GAAG,EAAE,GAAGD,kBAAkB,EAAE,CAAA;AACvD;KACD,CAAA;AACH,GAAC,CACF,CAAA;;EAED,OAAO;IACL5C,WAAW,EACTuC,MAAM,GACNQ,eAAe,CACZC,GAAG,CACFL,SAAS,GACL,UAACQ,CAAC,EAAA;AAAA,MAAA,OAAA,IAAA,GAAU/C,OAAO,GAAG+C,CAAC,CAACnD,WAAW,CAAA;KAAE,GACrC,UAACoD,EAAE,EAAA;MAAA,OAAKA,EAAE,CAACpD,WAAW,CAAA;KAC3B,CAAA,CACAqD,IAAI,CAACV,SAAS,GAAG,IAAI,GAAG,GAAG,CAAC,GAC/BH,MAAM;AACRvC,IAAAA,cAAc,OAAKsC,MAAM,IACvBI,SAAS,GAAG,EAAE,GAAGF,iBAAiB,CACjCM,GAAAA,eAAe,CACfC,GAAG,CACFL,SAAS,GACL,UAACQ,CAAC,EAAA;AAAA,MAAA,OAAA,IAAA,GAAU/C,OAAO,GAAG+C,CAAC,CAAClD,cAAc,CAAA;KAAE,GACxC,UAACkD,CAAC,EAAA;MAAA,OAAKA,CAAC,CAAClD,cAAc,CAAA;AAAA,KAAA,CAC5B,CACAoD,IAAI,CAACV,SAAS,GAAG,EAAE,GAAG,GAAG,CAAC,IAC3BA,SAAS,GAAG,KAAK,GAAGF,iBAAiB,CACpCD,GAAAA,MAAAA;GACJ,CAAA;AACH,CAAC,CAAA;AAED,SAAS3B,oBAAoB,CAC3ByC,MAA+B,EAC/BnD,OAAgB,EAChBmC,YAAsC,EAEtB,KAAA,EAAA;EAAA,IADdlC,OAAO,SAAPA,OAAO;AAAEC,IAAAA,KAAK,SAALA,KAAK;AAAEC,IAAAA,QAAQ,SAARA,QAAQ;AAAEC,IAAAA,OAAO,SAAPA,OAAO,CAAA;AAEnC,EAAA,IAAIA,OAAO,CAACgD,GAAG,CAACD,MAAM,CAAC,EAAE;IACvB,OAAOvD,qBAAqB,CAAC,mBAAmB,CAAC,CAAA;AACnD,GAAA;AAEA,EAAA,IAAMyD,IAAc,GAAG5C,MAAM,CAAC4C,IAAI,CAACF,MAAM,CAAC,CAAA;AAC1C,EAAA,IAAIE,IAAI,CAACV,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO/C,qBAAqB,CAAC,IAAI,CAAC,CAAA;AACpC,GAAA;AAEAQ,EAAAA,OAAO,CAACkD,GAAG,CAACH,MAAM,CAAC,CAAA;EAEnB,IAAMI,MAAM,GAAGtB,sBAAsB,CACnCoB,IAAI,CAACR,GAAG,CAAC,UAAClB,GAAG,EAAA;IAAA,OAAM;AAAEA,MAAAA,GAAG,EAAHA,GAAG;MAAErC,KAAK,EAAE6D,MAAM,CAACxB,GAAG,CAAA;KAAG,CAAA;AAAA,GAAC,CAAC,EAChD3B,OAAO,EACPmC,YAAY,EACZ;AAAElC,IAAAA,OAAO,EAAPA,OAAO;AAAEC,IAAAA,KAAK,EAALA,KAAK;AAAEC,IAAAA,QAAQ,EAARA,QAAQ;AAAEC,IAAAA,OAAO,EAAPA,OAAAA;AAAQ,GAAC,EACrC;AAAEgC,IAAAA,MAAM,EAAE,GAAG;AAAEC,IAAAA,MAAM,EAAE,GAAG;AAAEE,IAAAA,SAAS,EAAEb,iBAAAA;AAAkB,GAAC,CAC3D,CAAA;EAEDtB,OAAO,CAAA,QAAA,CAAO,CAAC+C,MAAM,CAAC,CAAA;AAEtB,EAAA,OAAOI,MAAM,CAAA;AACf,CAAA;AAEA,SAASnC,iBAAiB,CACxBD,IAAY,EACZ0B,GAA0B,EAC1B7C,OAAgB,EAEA,KAAA,EAAA;EAAA,IADdC,OAAO,SAAPA,OAAO;AAAEC,IAAAA,KAAK,SAALA,KAAK;AAAEC,IAAAA,QAAQ,SAARA,QAAQ;AAAEC,IAAAA,OAAO,SAAPA,OAAO,CAAA;AAEnC,EAAA,IAAIA,OAAO,CAACgD,GAAG,CAACP,GAAG,CAAC,EAAE;IACpB,OAAOjD,qBAAqB,CAAcuB,YAAAA,GAAAA,IAAI,GAAI,GAAA,CAAA,CAAA;AACpD,GAAA;AAEA,EAAA,IAAMkC,IAAI,GAAOR,EAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAACQ,IAAI,EAAE,CAAC,CAAA;AAC5B,EAAA,IAAIA,IAAI,CAACV,MAAM,KAAK,CAAC,EAAE;IACrB,OAAO/C,qBAAqB,CAAIuB,IAAI,GAAM,KAAA,CAAA,CAAA;AAC5C,GAAA;AAEAf,EAAAA,OAAO,CAACkD,GAAG,CAACT,GAAG,CAAC,CAAA;EAEhB,IAAMU,MAAM,GAAGtB,sBAAsB,CACnCoB,IAAI,CAACR,GAAG,CAAC,UAAClB,GAAG,EAAA;IAAA,OAAM;AAAEA,MAAAA,GAAG,EAAHA,GAAG;AAAErC,MAAAA,KAAK,EAAEuD,GAAG,CAACW,GAAG,CAAC7B,GAAG,CAAA;KAAG,CAAA;AAAA,GAAC,CAAC,EACjD3B,OAAO,EACPM,SAAS,EACT;AAAEL,IAAAA,OAAO,EAAPA,OAAO;AAAEC,IAAAA,KAAK,EAALA,KAAK;AAAEC,IAAAA,QAAQ,EAARA,QAAQ;AAAEC,IAAAA,OAAO,EAAPA,OAAAA;AAAQ,GAAC,EACrC;IAAEgC,MAAM,EAAKjB,IAAI,GAAI,IAAA;AAAEkB,IAAAA,MAAM,EAAE,GAAG;AAAEE,IAAAA,SAAS,EAAER,oBAAAA;AAAqB,GAAC,CACtE,CAAA;EAED3B,OAAO,CAAA,QAAA,CAAO,CAACyC,GAAG,CAAC,CAAA;AAEnB,EAAA,OAAOU,MAAM,CAAA;AACf,CAAA;AAEA,SAAS1C,mBAAmB,CAC1B4C,KAAgB,EAChBzD,OAAgB,EAEA,KAAA,EAAA;EAAA,IADdC,OAAO,SAAPA,OAAO;AAAEC,IAAAA,KAAK,SAALA,KAAK;AAAEC,IAAAA,QAAQ,SAARA,QAAQ;AAAEC,IAAAA,OAAO,SAAPA,OAAO,CAAA;AAEnC,EAAA,IAAIA,OAAO,CAACgD,GAAG,CAACK,KAAK,CAAC,EAAE;IACtB,OAAO7D,qBAAqB,CAAC,kBAAkB,CAAC,CAAA;AAClD,GAAA;AAEA,EAAA,IAAI6D,KAAK,CAACd,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO/C,qBAAqB,CAAC,IAAI,CAAC,CAAA;AACpC,GAAA;AAEAQ,EAAAA,OAAO,CAACkD,GAAG,CAACG,KAAK,CAAC,CAAA;EAElB,IAAMF,MAAM,GAAGtB,sBAAsB,CACnCwB,KAAK,CAACZ,GAAG,CAAC,UAACvD,KAAK,EAAA;IAAA,OAAM;AAAEqC,MAAAA,GAAG,EAAErB,SAAS;AAAEhB,MAAAA,KAAK,EAALA,KAAAA;KAAO,CAAA;AAAA,GAAC,CAAC,EACjDU,OAAO,EACPM,SAAS,EACT;AAAEL,IAAAA,OAAO,EAAPA,OAAO;AAAEC,IAAAA,KAAK,EAALA,KAAK;AAAEC,IAAAA,QAAQ,EAARA,QAAQ;AAAEC,IAAAA,OAAO,EAAPA,OAAAA;AAAQ,GAAC,EACrC;AACEgC,IAAAA,MAAM,EAAE,GAAG;AACXC,IAAAA,MAAM,EAAE,GAAG;AACXC,IAAAA,iBAAiB,EAAE,EAAE;AACrBC,IAAAA,SAAS,EAAET,aAAAA;AACb,GAAC,CACF,CAAA;EAED1B,OAAO,CAAA,QAAA,CAAO,CAACqD,KAAK,CAAC,CAAA;AAErB,EAAA,OAAOF,MAAM,CAAA;AACf,CAAA;AAEA,SAASjC,iBAAiB,CACxBH,IAAY,EACZuC,GAAiB,EACjB1D,OAAgB,EAEA,KAAA,EAAA;EAAA,IADdC,OAAO,SAAPA,OAAO;AAAEC,IAAAA,KAAK,SAALA,KAAK;AAAEC,IAAAA,QAAQ,SAARA,QAAQ;AAAEC,IAAAA,OAAO,SAAPA,OAAO,CAAA;AAEnC,EAAA,IAAIA,OAAO,CAACgD,GAAG,CAACM,GAAG,CAAC,EAAE;IACpB,OAAO9D,qBAAqB,CAAcuB,YAAAA,GAAAA,IAAI,GAAI,GAAA,CAAA,CAAA;AACpD,GAAA;AAEA,EAAA,IAAMe,MAAM,GAAOwB,EAAAA,CAAAA,MAAAA,CAAAA,GAAG,CAACxB,MAAM,EAAE,CAAC,CAAA;AAChC,EAAA,IAAIA,MAAM,CAACS,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO/C,qBAAqB,CAAIuB,IAAI,GAAM,KAAA,CAAA,CAAA;AAC5C,GAAA;AAEAf,EAAAA,OAAO,CAACkD,GAAG,CAACI,GAAG,CAAC,CAAA;EAEhB,IAAMH,MAAM,GAAGtB,sBAAsB,CACnCC,MAAM,CAACW,GAAG,CAAC,UAACvD,KAAK,EAAA;IAAA,OAAM;AAAEqC,MAAAA,GAAG,EAAErB,SAAS;AAAEhB,MAAAA,KAAK,EAALA,KAAAA;KAAO,CAAA;AAAA,GAAC,CAAC,EAClDU,OAAO,EACPM,SAAS,EACT;AAAEL,IAAAA,OAAO,EAAPA,OAAO;AAAEC,IAAAA,KAAK,EAALA,KAAK;AAAEC,IAAAA,QAAQ,EAARA,QAAQ;AAAEC,IAAAA,OAAO,EAAPA,OAAAA;AAAQ,GAAC,EACrC;IAAEgC,MAAM,EAAKjB,IAAI,GAAI,IAAA;AAAEkB,IAAAA,MAAM,EAAE,GAAG;AAAEE,IAAAA,SAAS,EAAET,aAAAA;AAAc,GAAC,CAC/D,CAAA;EAED1B,OAAO,CAAA,QAAA,CAAO,CAACsD,GAAG,CAAC,CAAA;AAEnB,EAAA,OAAOH,MAAM,CAAA;AACf,CAAA;AAEO,SAASI,YAAY,CAC1BR,MAA+B,EAC/BnD,OAAgB,EAChBmC,YAA2B,EAEnB,KAAA,EAAA;AAAA,EAAA,IAHRnC,OAAgB,KAAA,KAAA,CAAA,EAAA;AAAhBA,IAAAA,OAAgB,GAAGZ,SAAS,CAAA;AAAA,GAAA;AAAA,EAAA,IAAA,KAAA,GAAA,KAAA,KAAA,KAAA,CAAA,GAE6B,EAAE,GAAA,KAAA;AAAA,IAAA,aAAA,GAAA,KAAA,CAAzDa,OAAO;AAAPA,IAAAA,OAAO,8BAAG,IAAI,GAAA,aAAA;AAAA,IAAA,cAAA,GAAA,KAAA,CAAEE,QAAQ;AAARA,IAAAA,QAAQ,+BAAG,EAAE,GAAA,cAAA,CAAA;AAE/B,EAAA,IAAA,qBAAA,GAAmCO,oBAAoB,CACrDyC,MAAM,EACNnD,OAAO,EACPmC,YAAY,EACZ;AACElC,MAAAA,OAAO,EAAPA,OAAO;AACPE,MAAAA,QAAQ,EAARA,QAAQ;AACRD,MAAAA,KAAK,EAAE,CAAC;MACRE,OAAO,EAAE,IAAIiB,GAAG,EAAA;AAClB,KAAC,CACF;AAVuBkC,IAAAA,MAAM,yBAAtBzD,cAAc,CAAA;EAYtB,IAAIyD,MAAM,KAAK,IAAI,EAAE;AACnB,IAAA,OAAO,EAAE,CAAA;AACX,GAAA;AAEA,EAAA,OAAOA,MAAM,CAAA;AACf;;ACpcO,SAASK,oBAAoB,CAClCC,MAAoB,EACpBC,KAAc,EACN;EACR,IAAMC,KAAe,GAAG,EAAE,CAAA;EAE1B,IAAIF,MAAM,CAACG,WAAW,EAAE;AACtBD,IAAAA,KAAK,CAACE,IAAI,CAACH,KAAK,CAAC,CAAC,YAAY,CAAC,EAAED,MAAM,CAACG,WAAW,CAAC,CAAC,CAAA;AACvD,GAAC,MAAM,IAAIH,MAAM,CAAClC,GAAG,EAAE;AACrBoC,IAAAA,KAAK,CAACE,IAAI,CAACH,KAAK,CAAC,CAAC,YAAY,CAAC,EAAED,MAAM,CAAClC,GAAG,CAAC,CAAC,CAAA;AAC/C,GAAA;EAEA,IAAIkC,MAAM,CAACK,QAAQ,EAAE;IACnBH,KAAK,CAACE,IAAI,CACRH,KAAK,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,EAAED,MAAM,CAACK,QAAQ,CAACC,YAAY,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CACtE,CAAA;AACD;AACF,GAAA;;EAEA,IAAInD,OAAe,GAAG4C,MAAM,CAACQ,MAAM,IAAIhH,aAAa,CAACwG,MAAM,CAACS,KAAK,CAAC,CAAA;EAClE,IAAMjF,MAAM,GAAGwE,MAAM,CAACxE,MAAM,IAAIzC,aAAa,CAACiH,MAAM,CAACS,KAAK,CAAC,CAAA;EAE3D,IAAIT,MAAM,CAAC5C,OAAO,EAAE;AAClB,IAAA,IAAIA,OAAO,EAAE;MACXA,OAAO,IAAA,GAAA,GAAQ4C,MAAM,CAAC5C,OAAS,CAAA;AACjC,KAAC,MAAM;MACLA,OAAO,GAAG4C,MAAM,CAAC5C,OAAO,CAAA;AAC1B,KAAA;AACF,GAAA;AAEA,EAAA,IAAIA,OAAO,EAAE;AACX,IAAA,IAAI5B,MAAM,EAAE;AACV4B,MAAAA,OAAO,GAAG6C,KAAK,CAACzE,MAAM,EAAE4B,OAAO,CAAC,CAAA;AAClC,KAAA;AACA8C,IAAAA,KAAK,CAACE,IAAI,CAAChD,OAAO,CAAC,CAAA;AACrB,GAAA;EAEA,IAAMsD,kBAAkB,GAAG,SAArBA,kBAAkB,CACtB5C,GAAW,EACXwB,MAA2C,EAC3ChB,YAAsC,EAC7B;IACT,IAAI,CAACgB,MAAM,EAAE;AACX,MAAA,OAAA;AACF,KAAA;IAEA,IAAMqB,YAAY,GAAGb,YAAY,CAACR,MAAM,EAAEW,KAAK,EAAE3B,YAAY,CAAC,CAAA;IAE9D,IAAI,CAACqC,YAAY,EAAE;AACjB,MAAA,OAAA;AACF,KAAA;AAEAT,IAAAA,KAAK,CAACE,IAAI,CAACO,YAAY,CAAC,CAAA;GACzB,CAAA;EAEDD,kBAAkB,CAAC,UAAU,EAAEV,MAAM,CAACY,QAAQ,EAAEZ,MAAM,CAACa,cAAc,CAAC,CAAA;EACtEH,kBAAkB,CAAC,OAAO,EAAEV,MAAM,CAACc,KAAK,EAAErE,SAAS,CAAC,CAAA;EACpDiE,kBAAkB,CAAC,SAAS,EAAEV,MAAM,CAACe,OAAO,EAAEtE,SAAS,CAAC,CAAA;AAExD,EAAA,OAAOyD,KAAK,CAACb,IAAI,CAAC,GAAG,CAAC,CAAA;AACxB;;;;"}