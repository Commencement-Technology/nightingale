{"version":3,"file":"index-browser-dev.cjs.js","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import Level from 'nightingale-levels';\n\nexport interface LevelToStyles {\n  readonly [level: number]: string[];\n}\n\nconst levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n\nexport default levelToStyles;\n","import Level from 'nightingale-levels';\n\nexport interface LevelToSymbol {\n  readonly [level: number]: string;\n}\n\nconst levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n\nexport default levelToSymbol;\n","export interface StyleToHexColor {\n  readonly [key: string]: string;\n}\n\nconst styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n\nexport default styleToHexColor;\n","import hexColors from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport interface StyleToHtmlStyle {\n  readonly [key: string]: HtmlStyle;\n}\n\nexport const styleToHtmlStyleThemeLight: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: {\n    open: 'text-decoration: underline',\n    close: 'text-decoration: none',\n  },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: {\n    open: 'text-decoration: line-through',\n    close: 'text-decoration: none',\n  },\n\n  black: { open: 'color: black', close: 'color: initial' },\n  red: { open: 'color: #ff0020', close: 'color: initial' },\n  green: { open: 'color: #00b317', close: 'color: initial' },\n  yellow: { open: 'color: #ffcc00', close: 'color: initial' },\n  blue: { open: 'color: #00a0ff', close: 'color: initial' },\n  magenta: { open: 'color: #ff00a0', close: 'color: initial' },\n  cyan: { open: 'color: #00cfd8', close: 'color: initial' },\n  white: { open: 'color: white', close: 'color: initial' },\n  gray: { open: 'color: gray', close: 'color: initial' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: { open: `color: #${hexColors.orange}`, close: 'color: initial' },\n  grayLight: {\n    open: `color: #${hexColors.grayLight}`,\n    close: 'color: initial',\n  },\n  'gray-light': {\n    open: `color: #${hexColors.grayLight}`,\n    close: 'color: initial',\n  },\n};\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: 'color: lightgray', close: 'color: initial' },\n};\n","/* eslint-disable max-lines, @typescript-eslint/no-use-before-define */\nimport type { Styles } from 'nightingale-types';\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack?.startsWith(value.message)\n      ? stack\n      : `${value.message}\\n${stack || ''}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: '', formattedKey: '' };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[(key as unknown) as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes('\\n'))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? '' : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? '' : ' ')}${\n      breakLine ? ',\\n' : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}', formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: '[',\n      suffix: ']',\n      prefixSuffixSpace: '',\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']', formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport default function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from 'nightingale-types';\nimport type { StyleFn, ObjectStyles } from './formatObject';\nimport formatObject from './formatObject';\nimport levelToStyles from './levelToStyles';\nimport levelToSymbol from './levelToSymbol';\n\nexport default function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): string {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    styles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, styles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","hexColors","styleToHtmlStyleThemeDark","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","key","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","includes","v","fv","join","object","has","keys","add","result","delete","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":"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"}