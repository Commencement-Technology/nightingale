{"version":3,"file":"index-node14.mjs","sources":["../src/levelToStyles.ts","../src/levelToSymbol.ts","../src/styleToHexColor.ts","../src/styleToHtmlStyle.ts","../src/formatObject.ts","../src/formatRecordToString.ts"],"sourcesContent":["import { Level } from 'nightingale-levels';\n\nexport type LevelToStyles = Readonly<Record<number, string[]>>;\n\nexport const levelToStyles: LevelToStyles = {\n  [Level.TRACE]: ['gray'],\n  [Level.DEBUG]: ['gray'],\n  // [Level.INFO]: ['gray'],\n  [Level.WARN]: ['yellow'],\n  [Level.ERROR]: ['red', 'bold'],\n  [Level.CRITICAL]: ['red', 'bold'],\n  [Level.FATAL]: ['bgRed', 'white'],\n  [Level.EMERGENCY]: ['bgRed', 'white'],\n};\n","import { Level } from 'nightingale-levels';\n\nexport type LevelToSymbol = Readonly<Record<number, string>>;\n\nexport const levelToSymbol: LevelToSymbol = {\n  [Level.TRACE]: '•',\n  [Level.DEBUG]: '•',\n  [Level.INFO]: '→',\n  [Level.WARN]: '⚠',\n  [Level.ERROR]: '✖',\n  [Level.CRITICAL]: '!',\n  [Level.FATAL]: '‼',\n  [Level.EMERGENCY]: '‼',\n};\n","export type StyleToHexColor = Readonly<Record<string, string>>;\n\nexport const styleToHexColor: StyleToHexColor = {\n  orange: 'ff5f00',\n  grayLight: '808080',\n  'gray-light': '808080',\n};\n","import { styleToHexColor } from './styleToHexColor';\n\nexport interface HtmlStyle {\n  readonly open: string;\n  readonly close: string;\n}\n\nexport type StyleToHtmlStyle = Readonly<Record<string, HtmlStyle>>;\n\nexport const styleToHtmlStyleThemeLight: StyleToHtmlStyle = {\n  // text style\n  bold: { open: 'font-weight: bold', close: 'font-weight: normal' },\n  italic: { open: 'font-style: italic', close: 'font-style: normal' },\n  underline: {\n    open: 'text-decoration: underline',\n    close: 'text-decoration: none',\n  },\n  inverse: {\n    open: 'unicode-bidi: bidi-override; direction: rtl',\n    close: 'unicode-bidi: normal; direction: ltr',\n  },\n  strikethrough: {\n    open: 'text-decoration: line-through',\n    close: 'text-decoration: none',\n  },\n\n  black: { open: 'color: black', close: 'color: currentcolor' },\n  red: { open: 'color: #ff0020', close: 'color: currentcolor' },\n  green: { open: 'color: #00b317', close: 'color: currentcolor' },\n  yellow: { open: 'color: #ffcc00', close: 'color: currentcolor' },\n  blue: { open: 'color: #00a0ff', close: 'color: currentcolor' },\n  magenta: { open: 'color: #ff00a0', close: 'color: currentcolor' },\n  cyan: { open: 'color: #00cfd8', close: 'color: currentcolor' },\n  white: { open: 'color: white', close: 'color: currentcolor' },\n  gray: { open: 'color: gray', close: 'color: currentcolor' },\n\n  bgBlack: { open: 'background: black', close: 'background: initial' },\n  bgRed: { open: 'background: #ff0020', close: 'background: initial' },\n  bgGreen: { open: 'background: #00b317', close: 'background: initial' },\n  bgYellow: { open: 'background: #ffcc00', close: 'background: initial' },\n  bgBlue: { open: 'background: #00a0ff', close: 'background: initial' },\n  bgMagenta: { open: 'background: #ff00a0', close: 'background: initial' },\n  bgCyan: { open: 'background: #00cfd8', close: 'background: initial' },\n  bgWhite: { open: 'background: white', close: 'background: initial' },\n\n  orange: {\n    open: `color: #${styleToHexColor.orange}`,\n    close: 'color: currentcolor',\n  },\n  grayLight: {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n  'gray-light': {\n    open: `color: #${styleToHexColor.grayLight}`,\n    close: 'color: currentcolor',\n  },\n};\n\nexport const styleToHtmlStyleThemeDark: StyleToHtmlStyle = {\n  ...styleToHtmlStyleThemeLight,\n  black: styleToHtmlStyleThemeLight.white,\n  bgBlack: styleToHtmlStyleThemeLight.bgWhite,\n  white: styleToHtmlStyleThemeLight.black,\n  bgWhite: styleToHtmlStyleThemeLight.bgBlack,\n  gray: { open: 'color: lightgray', close: 'color: currentcolor' },\n};\n","/* eslint-disable max-lines, @typescript-eslint/no-use-before-define */\nimport type { Styles } from 'nightingale-types';\n\nexport interface FormatObjectOptions {\n  padding?: string;\n  maxDepth?: number;\n}\n\nexport type StyleFn = (styles: Styles, value: string) => string;\n\nexport type ObjectStyles<Keys extends string = string> = Record<Keys, Styles>;\n\nconst noStyleFn: StyleFn = (styles: Styles, value: string): string => value;\n\ninterface InternalFormatParams {\n  padding: string;\n  depth: number;\n  maxDepth: number;\n  objects: Set<unknown>;\n}\n\ninterface FormattedKey {\n  stringKey: string;\n  formattedKey: string;\n}\n\ntype FormatKey<Key> = (\n  key: Key,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n) => FormattedKey;\n\ninterface Value<Key> {\n  key: Key;\n  value: unknown;\n}\n\ninterface FormattedValue {\n  stringValue: string;\n  formattedValue: string;\n}\n\ntype Values<Key> = Value<Key>[];\n\ninterface InternalFormatIteratorParams<Key> {\n  prefix: string;\n  suffix: string;\n  formatKey: FormatKey<Key>;\n  prefixSuffixSpace?: string;\n}\n\nfunction tryStringify(arg: unknown): string {\n  try {\n    return JSON.stringify(arg).replace(/\\\\n/g, '\\n');\n  } catch {\n    return '[Circular]';\n  }\n}\n\nconst sameRawFormattedValue = (value: string): FormattedValue => ({\n  stringValue: value,\n  formattedValue: value,\n});\n\nfunction internalFormatValue(\n  value: unknown,\n  styleFn: StyleFn,\n  styles: Styles,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  const typeofValue = typeof value;\n\n  if (!styles) {\n    if (value == null) {\n      styles = ['cyan'];\n    } else {\n      switch (typeofValue) {\n        case 'undefined':\n          styles = ['cyan'];\n          break;\n        case 'boolean':\n          styles = ['green'];\n          break;\n        case 'number':\n          styles = ['yellow'];\n          break;\n        case 'bigint':\n          styles = ['red'];\n          break;\n        case 'string':\n          styles = ['orange'];\n          break;\n        case 'symbol':\n          styles = ['magenta'];\n          break;\n        case 'object':\n        case 'function':\n          break;\n      }\n    }\n  }\n\n  let stringValue: string;\n  if (value === null) {\n    stringValue = 'null';\n  } else if (value === undefined) {\n    stringValue = 'undefined';\n  } else if (typeofValue === 'boolean') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    stringValue = (value as any).toString() as string;\n  } else if ((value as () => unknown).constructor === Object) {\n    if (depth >= maxDepth) {\n      stringValue = '{Object...}';\n    } else {\n      return internalFormatObject(\n        value as Record<string, unknown>,\n        styleFn,\n        undefined,\n        {\n          padding,\n          depth: depth + 1,\n          maxDepth,\n          objects,\n        },\n      );\n    }\n  } else if (Array.isArray(value)) {\n    if (depth >= maxDepth) {\n      stringValue = '[Array...]';\n    } else {\n      return internalFormatArray(value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof Error) {\n    const stack = value.stack;\n    stringValue = stack?.startsWith(value.message)\n      ? stack\n      : `${value.message}\\n${stack || ''}`;\n  } else if (value instanceof Map) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatMap(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (typeofValue === 'bigint') {\n    stringValue = (value as bigint).toString();\n  } else if (typeofValue === 'symbol') {\n    stringValue = (value as symbol).toString();\n  } else if (value instanceof Set) {\n    const name = value.constructor.name;\n    if (depth >= maxDepth) {\n      stringValue = `{${name}...}`;\n    } else {\n      return internalFormatSet(name, value, styleFn, {\n        padding,\n        depth: depth + 1,\n        maxDepth,\n        objects,\n      });\n    }\n  } else if (value instanceof WeakMap) {\n    stringValue = '{WeakMap...}';\n  } else if (value instanceof WeakSet) {\n    stringValue = '{WeakSet...}';\n  } else {\n    stringValue = tryStringify(value);\n  }\n\n  const formattedValue = styleFn(styles, stringValue);\n\n  return {\n    stringValue,\n    formattedValue,\n  };\n}\n\nconst separator = ',';\n\nconst internalFormatKey: FormatKey<string> = (\n  key: string,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return {\n    stringKey: `${key}: `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${key}:`)} `,\n  };\n};\n\nconst internalNoKey: FormatKey<undefined> = (\n  key: string | undefined,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  return { stringKey: '', formattedKey: '' };\n};\n\nconst internalFormatMapKey: FormatKey<unknown> = (\n  key: unknown,\n  styleFn: StyleFn,\n  internalFormatParams: InternalFormatParams,\n): FormattedKey => {\n  const { stringValue, formattedValue } = internalFormatValue(\n    key,\n    noStyleFn,\n    undefined,\n    internalFormatParams,\n  );\n  return {\n    stringKey: `${stringValue} => `,\n    formattedKey: `${styleFn(['gray-light', 'bold'], `${formattedValue}:`)} `,\n  };\n};\n\nconst internalFormatIterator = <Key>(\n  values: Values<Key>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n  {\n    prefix,\n    suffix,\n    prefixSuffixSpace = ' ',\n    formatKey,\n  }: InternalFormatIteratorParams<Key>,\n): FormattedValue => {\n  let breakLine = false;\n  const formattedSeparator = (): string => styleFn(['gray'], separator);\n\n  const valuesMaxIndex = values.length - 1;\n  const formattedValues: FormattedValue[] = values.map(\n    ({ key, value }, index: number) => {\n      const nextDepth = depth + 1;\n      const internalFormatParams = {\n        padding,\n        depth: nextDepth,\n        maxDepth,\n        objects,\n      };\n\n      // key must be formatted before value (browser-formatter needs order)\n      const { stringKey, formattedKey } = formatKey(\n        key,\n        styleFn,\n        internalFormatParams,\n      );\n\n      let { stringValue, formattedValue } = internalFormatValue(\n        value,\n        styleFn,\n        key && objectStyles\n          ? objectStyles[key as unknown as string]\n          : undefined,\n        internalFormatParams,\n      );\n\n      if (\n        stringValue &&\n        (stringValue.length > 80 || stringValue.includes('\\n'))\n      ) {\n        breakLine = true;\n        stringValue = stringValue.replace(/\\n/g, `\\n${padding}`);\n        formattedValue = formattedValue.replace(/\\n/g, `\\n${padding}`);\n      }\n\n      return {\n        stringValue:\n          stringKey + stringValue + (index === valuesMaxIndex ? '' : separator),\n        formattedValue:\n          formattedKey +\n          formattedValue +\n          (index === valuesMaxIndex ? '' : formattedSeparator()),\n        // note: we need to format the separator for each values for browser-formatter\n      };\n    },\n  );\n\n  return {\n    stringValue:\n      prefix +\n      formattedValues\n        .map(\n          breakLine\n            ? (v) => `\\n${padding}${v.stringValue}`\n            : (fv) => fv.stringValue,\n        )\n        .join(breakLine ? '\\n' : ' ') +\n      suffix,\n    formattedValue: `${prefix}${\n      breakLine ? '' : prefixSuffixSpace\n    }${formattedValues\n      .map(\n        breakLine\n          ? (v) => `\\n${padding}${v.formattedValue}`\n          : (v) => v.formattedValue,\n      )\n      .join(breakLine ? '' : ' ')}${\n      breakLine ? ',\\n' : prefixSuffixSpace\n    }${suffix}`,\n  };\n};\n\nfunction internalFormatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn,\n  objectStyles: ObjectStyles | undefined,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(object)) {\n    return sameRawFormattedValue('{Circular Object}');\n  }\n\n  const keys: string[] = Object.keys(object);\n  if (keys.length === 0) {\n    return sameRawFormattedValue('{}');\n  }\n\n  objects.add(object);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: object[key] })),\n    styleFn,\n    objectStyles,\n    { padding, depth, maxDepth, objects },\n    { prefix: '{', suffix: '}', formatKey: internalFormatKey },\n  );\n\n  objects.delete(object);\n\n  return result;\n}\n\nfunction internalFormatMap(\n  name: string,\n  map: Map<unknown, unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(map)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const keys = [...map.keys()];\n  if (keys.length === 0) {\n    return sameRawFormattedValue(`${name} {}`);\n  }\n\n  objects.add(map);\n\n  const result = internalFormatIterator(\n    keys.map((key) => ({ key, value: map.get(key) })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} {`, suffix: '}', formatKey: internalFormatMapKey },\n  );\n\n  objects.delete(map);\n\n  return result;\n}\n\nfunction internalFormatArray(\n  array: unknown[],\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(array)) {\n    return sameRawFormattedValue('{Circular Array}');\n  }\n\n  if (array.length === 0) {\n    return sameRawFormattedValue('[]');\n  }\n\n  objects.add(array);\n\n  const result = internalFormatIterator(\n    array.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    {\n      prefix: '[',\n      suffix: ']',\n      prefixSuffixSpace: '',\n      formatKey: internalNoKey,\n    },\n  );\n\n  objects.delete(array);\n\n  return result;\n}\n\nfunction internalFormatSet(\n  name: string,\n  set: Set<unknown>,\n  styleFn: StyleFn,\n  { padding, depth, maxDepth, objects }: InternalFormatParams,\n): FormattedValue {\n  if (objects.has(set)) {\n    return sameRawFormattedValue(`{Circular ${name}}`);\n  }\n\n  const values = [...set.values()];\n  if (values.length === 0) {\n    return sameRawFormattedValue(`${name} []`);\n  }\n\n  objects.add(set);\n\n  const result = internalFormatIterator(\n    values.map((value) => ({ key: undefined, value })),\n    styleFn,\n    undefined,\n    { padding, depth, maxDepth, objects },\n    { prefix: `${name} [`, suffix: ']', formatKey: internalNoKey },\n  );\n\n  objects.delete(set);\n\n  return result;\n}\n\nexport function formatObject(\n  object: Record<string, unknown>,\n  styleFn: StyleFn = noStyleFn,\n  objectStyles?: ObjectStyles,\n  { padding = '  ', maxDepth = 10 }: FormatObjectOptions = {},\n): string {\n  const { formattedValue: result } = internalFormatObject(\n    object,\n    styleFn,\n    objectStyles,\n    {\n      padding,\n      maxDepth,\n      depth: 0,\n      objects: new Set(),\n    },\n  );\n\n  if (result === '{}') {\n    return '';\n  }\n\n  return result;\n}\n","import type { LogRecord, Metadata } from 'nightingale-types';\nimport type { StyleFn, ObjectStyles } from './formatObject';\nimport { formatObject } from './formatObject';\nimport { levelToStyles } from './levelToStyles';\nimport { levelToSymbol } from './levelToSymbol';\n\nexport function formatRecordToString<T extends Metadata>(\n  record: LogRecord<T>,\n  style: StyleFn,\n): string {\n  const parts: string[] = [];\n\n  if (record.displayName) {\n    parts.push(style(['gray-light'], record.displayName));\n  } else if (record.key) {\n    parts.push(style(['gray-light'], record.key));\n  }\n\n  if (record.datetime) {\n    parts.push(\n      style(['gray', 'bold'], record.datetime.toTimeString().split(' ')[0]),\n    );\n    /* new Date().toFormat('HH24:MI:SS') */\n  }\n\n  let message: string = record.symbol || levelToSymbol[record.level];\n  const styles = record.styles || levelToStyles[record.level];\n\n  if (record.message) {\n    if (message) {\n      message += ` ${record.message}`;\n    } else {\n      message = record.message;\n    }\n  }\n\n  if (message) {\n    if (styles) {\n      message = style(styles, message);\n    }\n    parts.push(message);\n  }\n\n  const formatRecordObject = (\n    key: string,\n    object: Record<string, unknown> | undefined,\n    objectStyles: ObjectStyles | undefined,\n  ): void => {\n    if (!object) {\n      return;\n    }\n\n    const stringObject = formatObject(object, style, objectStyles);\n\n    if (!stringObject) {\n      return;\n    }\n\n    parts.push(stringObject);\n  };\n\n  formatRecordObject('metadata', record.metadata, record.metadataStyles);\n  formatRecordObject('extra', record.extra, undefined);\n  formatRecordObject('context', record.context, undefined);\n\n  return parts.join(' ');\n}\n"],"names":["levelToStyles","Level","TRACE","DEBUG","WARN","ERROR","CRITICAL","FATAL","EMERGENCY","levelToSymbol","INFO","styleToHexColor","orange","grayLight","styleToHtmlStyleThemeLight","bold","open","close","italic","underline","inverse","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","styleToHtmlStyleThemeDark","noStyleFn","styles","value","tryStringify","arg","JSON","stringify","replace","sameRawFormattedValue","stringValue","formattedValue","internalFormatValue","styleFn","padding","depth","maxDepth","objects","typeofValue","undefined","toString","constructor","Object","internalFormatObject","Array","isArray","internalFormatArray","Error","stack","startsWith","message","Map","name","internalFormatMap","Set","internalFormatSet","WeakMap","WeakSet","separator","internalFormatKey","key","stringKey","formattedKey","internalNoKey","internalFormatMapKey","internalFormatParams","internalFormatIterator","values","objectStyles","prefix","suffix","prefixSuffixSpace","formatKey","breakLine","formattedSeparator","valuesMaxIndex","length","formattedValues","map","index","includes","v","fv","join","object","has","keys","add","result","delete","get","array","set","formatObject","formatRecordToString","record","style","parts","displayName","push","datetime","toTimeString","split","symbol","level","formatRecordObject","stringObject","metadata","metadataStyles","extra","context"],"mappings":"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"}