{"version":3,"file":"index-node8.cjs.js","sources":["../src/index.ts"],"sourcesContent":["import { Client as RavenClient, CaptureOptions } from 'raven';\nimport { LogRecord, Handle } from 'nightingale-types';\nimport Level from 'nightingale-levels';\n\nconst mapToSentryLevel: { [level: number]: string } = {\n  [Level.TRACE]: 'debug',\n  [Level.DEBUG]: 'debug',\n  [Level.INFO]: 'info',\n  [Level.WARNING]: 'warning',\n  [Level.ERROR]: 'error',\n  [Level.FATAL]: 'fatal',\n  [Level.EMERGENCY]: 'fatal',\n};\n\nexport interface Options {\n  getUser?: <T>(record: LogRecord<T>) => any;\n  getTags?: <T>(record: LogRecord<T>) => any;\n  getReq?: <T>(record: LogRecord<T>) => any;\n}\n\nexport interface MetadataWithError {\n  error?: Error;\n}\n\nconst createHandler = (\n  ravenUrl: string,\n  { getUser = () => {}, getTags = () => {}, getReq = () => {} }: Options = {},\n): Handle => {\n  const ravenClient = new RavenClient(ravenUrl);\n\n  return <T extends MetadataWithError>(record: LogRecord<T>) => {\n    const { key, level, metadata, extra } = record;\n    const error = metadata && metadata.error;\n\n    if (!error) {\n      return;\n    }\n\n    const extraData = Object.assign({}, metadata, extra);\n    delete extraData.error;\n\n    ravenClient.captureException(error, {\n      logger: key, // logger is not in CaptureOptions but should work: merged later. TODO check and make a PR\n      level: mapToSentryLevel[level] || 'error',\n      extra: extraData,\n      user: getUser(record),\n      tags: getTags(record),\n      req: getReq(record),\n    } as CaptureOptions);\n  };\n};\n\nexport default class SentryHandler {\n  public minLevel: Level;\n\n  public handle: Handle;\n\n  public constructor(ravenUrl: string, minLevel: number, options?: Options) {\n    this.minLevel = minLevel;\n    this.handle = createHandler(ravenUrl, options);\n  }\n}\n"],"names":["mapToSentryLevel","Level","TRACE","DEBUG","INFO","WARNING","ERROR","FATAL","EMERGENCY","createHandler","ravenUrl","getUser","getTags","getReq","ravenClient","RavenClient","record","key","level","metadata","extra","error","extraData","Object","assign","captureException","logger","user","tags","req","SentryHandler","constructor","minLevel","options","handle"],"mappings":";;;;;;;;;AAIA,MAAMA,gBAA6C,GAAG;GACnDC,KAAK,CAACC,KAAP,GAAe,OADqC;GAEnDD,KAAK,CAACE,KAAP,GAAe,OAFqC;GAGnDF,KAAK,CAACG,IAAP,GAAc,MAHsC;GAInDH,KAAK,CAACI,OAAP,GAAiB,SAJmC;GAKnDJ,KAAK,CAACK,KAAP,GAAe,OALqC;GAMnDL,KAAK,CAACM,KAAP,GAAe,OANqC;GAOnDN,KAAK,CAACO,SAAP,GAAmB;CAPrB;;AAoBA,MAAMC,aAAa,GAAG,CACpBC,QADoB,EAEpB;EAAEC,OAAO,GAAG,MAAM,EAAlB;EAAsBC,OAAO,GAAG,MAAM,EAAtC;EAA0CC,MAAM,GAAG,MAAM;IAAgB,EAFrD,KAGT;QACLC,WAAW,GAAG,IAAIC,YAAJ,CAAgBL,QAAhB,CAApB;SAEqCM,MAA9B,IAAuD;UACtD;MAAEC,GAAF;MAAOC,KAAP;MAAcC,QAAd;MAAwBC;QAAUJ,MAAxC;UACMK,KAAK,GAAGF,QAAQ,IAAIA,QAAQ,CAACE,KAAnC;;QAEI,CAACA,KAAL,EAAY;;;;UAINC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,QAAlB,EAA4BC,KAA5B,CAAlB;WACOE,SAAS,CAACD,KAAjB;IAEAP,WAAW,CAACW,gBAAZ,CAA6BJ,KAA7B,EAAoC;MAClCK,MAAM,EAAET,GAD0B;;MAElCC,KAAK,EAAElB,gBAAgB,CAACkB,KAAD,CAAhB,IAA2B,OAFA;MAGlCE,KAAK,EAAEE,SAH2B;MAIlCK,IAAI,EAAEhB,OAAO,CAACK,MAAD,CAJqB;MAKlCY,IAAI,EAAEhB,OAAO,CAACI,MAAD,CALqB;MAMlCa,GAAG,EAAEhB,MAAM,CAACG,MAAD;KANb;GAXF;CANF;;AA4BA,AAAe,MAAMc,aAAN,CAAoB;EAK1BC,WAAP,CAAmBrB,QAAnB,EAAqCsB,QAArC,EAAuDC,OAAvD,EAA0E;SACnED,QAAL,GAAgBA,QAAhB;SACKE,MAAL,GAAczB,aAAa,CAACC,QAAD,EAAWuB,OAAX,CAA3B;;;;;;;"}